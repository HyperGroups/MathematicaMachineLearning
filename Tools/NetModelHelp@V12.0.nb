(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    322024,       5877]
NotebookOptionsPosition[    307311,       5672]
NotebookOutlinePosition[    307648,       5687]
CellTagsIndexPosition[    307605,       5684]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["NetModel\:5355\:6a21\:578b\:79bb\:7ebf\:5b89\:88c5", "Title",
 CellChangeTimes->{{3.729658377648466*^9, 3.729658378876129*^9}, {
  3.7508358786839123`*^9, 3.750835886408559*^9}, {3.7686226911766777`*^9, 
  3.7686227010795803`*^9}},ExpressionUUID->"6c110a99-20a1-4969-b9e2-\
cbffc4928333"],

Cell[CellGroupData[{

Cell["Tested@V12.0", "Chapter",
 CellChangeTimes->{{3.7297655111478815`*^9, 3.729765517711336*^9}, {
  3.768622659533669*^9, 
  3.76862268804139*^9}},ExpressionUUID->"18d89f6a-4102-473a-a76b-\
e95e6d172eba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"names", "=", 
   RowBox[{"NetModel", "[", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.729765453563237*^9, 3.72976546217865*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d9864a60-5c03-44c1-9235-6f1d92bddb3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"names", "//", "Length"}]], "Code",
 CellChangeTimes->{{3.750835889573781*^9, 3.750835891299892*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"4275cb64-9498-4dae-87b1-f769207e0793"],

Cell[BoxData["89"], "Output",
 CellChangeTimes->{
  3.7508531677773952`*^9, {3.7508535187858562`*^9, 3.750853528125177*^9}, {
   3.7508537338122272`*^9, 3.750853735274252*^9}, {3.7508539249334307`*^9, 
   3.750853926197432*^9}, {3.750854276329348*^9, 3.7508542784603252`*^9}, {
   3.7508547465692596`*^9, 3.7508547479342203`*^9}, 3.7508552377660713`*^9, 
   3.750857239856082*^9, {3.768622664694399*^9, 3.7686226650129843`*^9}, 
   3.7686235705177813`*^9, {3.768623691044553*^9, 3.76862369121425*^9}, 
   3.7686237479912663`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"02755620-30e5-49b4-a93b-a4ae1c8d9fbb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:672c\:5730\:6a21\:578b", "Section",
 CellChangeTimes->{{3.729661399934244*^9, 
  3.729661402419812*^9}},ExpressionUUID->"c0707f88-64f6-4740-be01-\
9767dec1a2f8"],

Cell["\:5982\:679c\:6709\:62a5\:9519\:4fe1\:606f\:ff0c\:8bf4\:660e\:6a21\:578b\
\:8d44\:6e90\:6570\:636e\:6709\:4e9b\:4e0d\:5e72\:51c0\:6574\:9f50\:ff0c\:53ef\
\:4ee5\:624b\:52a8\:5220\:9664\:4e00\:4e9b\:6587\:4ef6\:5939\:3002", "Text",
 CellChangeTimes->{{3.750850621877915*^9, 3.7508506419452996`*^9}, {
  3.768622732759787*^9, 
  3.768622740294942*^9}},ExpressionUUID->"d8e6489b-4e06-4144-98b9-\
5d7ed698da97"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"localModels", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"fullModels", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Print", "@", "i"}], ";", 
          RowBox[{"i", "->", 
           RowBox[{
            RowBox[{"NetModel", "[", 
             RowBox[{"i", ",", "\"\<ContentElementLocations\>\""}], "]"}], 
            "@", "\"\<EvaluationNet\>\""}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "names"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "==", "LocalObject"}], "&"}]}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.729658427807651*^9, 3.7296585532031517`*^9}, {
  3.729661484623527*^9, 3.729661513421473*^9}, {3.750839550534251*^9, 
  3.750839551228814*^9}, {3.750844557256669*^9, 3.7508445585512104`*^9}, {
  3.750850667388322*^9, 3.750850677842391*^9}},
 CellLabel->
  "In[356]:=",ExpressionUUID->"ea332dc2-df8e-42e5-abe1-223aaa6462ac"],

Cell[CellGroupData[{

Cell[BoxData["\<\"2D Face Alignment Net Trained on 300W Large Pose \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"a57ed45e-e9d9-417f-a915-560f6edf4cf6"],

Cell[BoxData["\<\"3D Face Alignment Net Trained on 300W Large Pose \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707793429*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"b75e112c-5a9b-4146-ba31-f4cb6f8fad7a"],

Cell[BoxData["\<\"AdaIN-Style Trained on MS-COCO and Painter by Numbers \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707794936*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"4fe2e6ef-26b4-410f-8c9b-00d17347e6ab"],

Cell[BoxData["\<\"Ademxapp Model A1 Trained on ADE20K Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707856819*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"276b1e62-db01-4589-8af4-63cad76a1e0b"],

Cell[BoxData["\<\"Ademxapp Model A1 Trained on Cityscapes Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227078581867`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"58086122-3eda-44e0-b87d-20ffc368b19d"],

Cell[BoxData["\<\"Ademxapp Model A1 Trained on PASCAL VOC2012 and MS-COCO \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707859449*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"40b345df-2a27-4fd4-9b6b-d5f988e5ffab"],

Cell[BoxData["\<\"Ademxapp Model A Trained on ImageNet Competition \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707860827*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"02e2c593-b9b5-49cc-a9f2-6ec32072b7e2"],

Cell[BoxData["\<\"Age Estimation VGG-16 Trained on IMDB-WIKI and Looking at \
People Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707862101*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"885c79e8-69d4-4efd-b71a-6dfeeddd6b6a"],

Cell[BoxData["\<\"Age Estimation VGG-16 Trained on IMDB-WIKI Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707863377*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"60248257-7afa-4fc5-800c-d27156692062"],

Cell[BoxData["\<\"BERT Trained on BookCorpus and English Wikipedia \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227078646383`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"635a95e2-fd03-4d9b-9fe1-20c883f7965e"],

Cell[BoxData["\<\"BPEmb Subword Embeddings Trained on Wikipedia Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622722029254*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"476d807c-614a-4758-8c5d-8523e46455b8"],

Cell[BoxData["\<\"CapsNet Trained on MNIST Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227222776623`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"3e986b44-ac96-441b-9682-01019e1ce50b"],

Cell[BoxData["\<\"Clinical Concept Embeddings Trained on Health Insurance \
Claims, Clinical Narratives from Stanford and PubMed Journal Articles\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622722283263*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"cebebd0e-cc30-46de-bee5-fc2ff144d404"],

Cell[BoxData["\<\"Colorful Image Colorization Trained on ImageNet Competition \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227223242273`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"ee6a82bf-1b30-437b-bb41-7d4267082326"],

Cell[BoxData["\<\"ColorNet Image Colorization Trained on ImageNet Competition \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622722325595*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"e4475b5b-6f95-4eea-9445-fc27e7e429b1"],

Cell[BoxData["\<\"ColorNet Image Colorization Trained on Places Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227223268957`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"98d33185-b5a2-43e5-97bd-3e04530f7d05"],

Cell[BoxData["\<\"ConceptNet Numberbatch Word Vectors V17.06\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227223278093`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"bb75b3bb-febf-4e7d-acc1-a8fe172f24f5"],

Cell[BoxData["\<\"ConceptNet Numberbatch Word Vectors V17.06 (Raw \
Model)\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622722328725*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"9b5c47cd-f086-4696-b699-3bffa58c19b2"],

Cell[BoxData["\<\"CREPE Pitch Detection Net Trained on Monophonic Signal Data\
\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622723180637*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"086936ff-d7c1-49ca-9e2a-3ff6878d9fe6"],

Cell[BoxData["\<\"CycleGAN Apple-to-Orange Translation Trained on ImageNet \
Competition Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622724063284*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"41c604a3-86c7-4aea-9d44-87edf47d7876"],

Cell[BoxData["\<\"CycleGAN Horse-to-Zebra Translation Trained on ImageNet \
Competition Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227240681458`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"61fe9f38-cefb-4feb-ae19-e49d1494b540"],

Cell[BoxData["\<\"CycleGAN Monet-to-Photo Translation\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.76862272411029*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"51f9bf8a-c052-4655-be55-4a4304ccd201"],

Cell[BoxData["\<\"CycleGAN Orange-to-Apple Translation Trained on ImageNet \
Competition Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622724111725*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"5ebbd936-7261-47ec-8755-aa3c8915846f"],

Cell[BoxData["\<\"CycleGAN Photo-to-Cezanne Translation\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227241129923`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"22bdd281-d73c-46d8-a2fc-8e50d3b0e53a"],

Cell[BoxData["\<\"CycleGAN Photo-to-Monet Translation\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227241141768`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"c903fab8-00e3-45d7-a21b-4e4bc5e8d4a8"],

Cell[BoxData["\<\"CycleGAN Photo-to-Van Gogh Translation\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622724115353*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"9a985553-bde0-47c0-b53e-095cedf98d12"],

Cell[BoxData["\<\"CycleGAN Summer-to-Winter Translation\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227241165257`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"c5d41cdb-8867-468c-ab26-eabe31878572"],

Cell[BoxData["\<\"CycleGAN Winter-to-Summer Translation\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227241176977`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"72b14f2b-6d32-4a73-9e1f-d84bf50a06b4"],

Cell[BoxData["\<\"CycleGAN Zebra-to-Horse Translation Trained on ImageNet \
Competition Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.76862272411895*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"9acaee3d-cabb-4783-896e-36c2e71cb172"],

Cell[BoxData["\<\"Deep Speech 2 Trained on Baidu English Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227241198387`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"50c84926-7378-46fe-87e0-2aad61b322d9"],

Cell[BoxData["\<\"Dilated ResNet-105 Trained on Cityscapes Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227241207237`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"e78f3549-6b2c-47bb-bc7f-6a20c186ff60"],

Cell[BoxData["\<\"Dilated ResNet-22 Trained on Cityscapes Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622724121566*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"c98ecd57-ae0c-4e26-82d8-9942a5c8f183"],

Cell[BoxData["\<\"Dilated ResNet-38 Trained on Cityscapes Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622724122423*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"bece71af-f321-47ca-ac21-3cb19ba5d9ff"],

Cell[BoxData["\<\"ELMo Contextual Word Representations Trained on 1B Word \
Benchmark\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622724126841*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"db0b8a23-c87f-4f9d-bbf3-a6c9c0ab349d"],

Cell[BoxData["\<\"Enhanced Super-Resolution GAN Trained on DIV2K, Flickr2K \
and OST Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622724164699*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"d93e6001-07cd-48a4-9bbc-0efa7be80b9d"],

Cell[BoxData["\<\"Gender Prediction VGG-16 Trained on IMDB-WIKI Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622724984705*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"e161dff3-3dcc-4100-ae85-579e7419229d"],

Cell[BoxData["\<\"GloVe 100-Dimensional Word Vectors Trained on Tweets\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622724986182*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"938c6b2f-d886-4a16-b9f8-60290dea77df"],

Cell[BoxData["\<\"GloVe 100-Dimensional Word Vectors Trained on Wikipedia and \
Gigaword 5 Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227249875383`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"4d979953-5495-45d5-bbae-3fcf18a202da"],

Cell[BoxData["\<\"GloVe 200-Dimensional Word Vectors Trained on Tweets\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622724988508*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"d78b9c42-3760-40a6-9460-861a90432ac6"],

Cell[BoxData["\<\"GloVe 25-Dimensional Word Vectors Trained on Tweets\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622724989493*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"23420e93-1f14-4aa8-981b-52398cc121f9"],

Cell[BoxData["\<\"GloVe 300-Dimensional Word Vectors Trained on Common Crawl \
42B\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622724990459*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"052c31b0-894c-4b3c-a5fb-dc2565dc2071"],

Cell[BoxData["\<\"GloVe 300-Dimensional Word Vectors Trained on Common Crawl \
840B\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622724991395*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"adbcdca0-e27c-411b-b3d3-8ba13587f917"],

Cell[BoxData["\<\"GloVe 300-Dimensional Word Vectors Trained on Wikipedia and \
Gigaword 5 Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622724996024*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"245b6096-3d6c-4c5c-b98a-0cc96170f2fb"],

Cell[BoxData["\<\"GloVe 50-Dimensional Word Vectors Trained on Tweets\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622725036181*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"1068daca-a92e-40be-99c3-c2d808071e87"],

Cell[BoxData["\<\"GloVe 50-Dimensional Word Vectors Trained on Wikipedia and \
Gigaword 5 Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227250373497`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"cf6ae7d4-9268-44a4-bd6d-4f3cf8f90ef4"],

Cell[BoxData["\<\"GPT Transformer Trained on BookCorpus Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622725038313*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"56b51f7d-905e-4867-a8e0-373e16a9c3eb"],

Cell[BoxData["\<\"Inception V1 Trained on Extended Salient Object Subitizing \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622725902482*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"49d27ef8-ad17-4dbd-a049-8867a1ce8f97"],

Cell[BoxData["\<\"Inception V1 Trained on ImageNet Competition Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622725904087*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"ac0014b9-da49-43c1-9a65-b62a3d864038"],

Cell[BoxData["\<\"Inception V1 Trained on Places365 Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.76862272590889*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"0b73a153-ff88-45a4-ae70-143f5be783c1"],

Cell[BoxData["\<\"Inception V3 Trained on ImageNet Competition Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227259134607`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"df336f0a-fda0-40ec-ab10-367cec6333bb"],

Cell[BoxData["\<\"LeNet\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622725953467*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"c1a12503-9b45-4031-86a4-d9251f2ebc81"],

Cell[BoxData["\<\"LeNet Trained on MNIST Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227259546337`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"484af591-58d3-467c-85d4-3b1fc7d6662e"],

Cell[BoxData["\<\"Multi-scale Context Aggregation Net Trained on CamVid \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622725955586*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"cf73a228-fe61-4998-9e0d-006703136584"],

Cell[BoxData["\<\"Multi-scale Context Aggregation Net Trained on Cityscapes \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227259565496`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"481ac783-a57f-43ab-8001-bbf6572d7dc3"],

Cell[BoxData["\<\"Multi-scale Context Aggregation Net Trained on PASCAL \
VOC2012 Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227259574823`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"86688d62-1c70-438f-b039-73c64d167143"],

Cell[BoxData["\<\"OpenFace Face Recognition Net Trained on CASIA-WebFace and \
FaceScrub Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227259584227`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"9d00dd12-9493-43c9-9f0a-00c0f7bc0579"],

Cell[BoxData["\<\"Pix2pix Photo-to-Street-Map Translation\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622725959373*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"72ffa138-a340-48b4-aafa-b5b8003aaa89"],

Cell[BoxData["\<\"Pix2pix Street-Map-to-Photo Translation\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622725960335*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"65b638d2-f77f-4fcf-8e0f-340e4c8ceadc"],

Cell[BoxData["\<\"ResNet-101 Trained on Augmented CASIA-WebFace Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622726852448*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"23713dc6-2cdc-43ec-bc3f-0cee43a4efbd"],

Cell[BoxData["\<\"ResNet-101 Trained on ImageNet Competition Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622726857991*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"e4e6a135-10e4-4ccc-8cd0-20dc8a00ac88"],

Cell[BoxData["\<\"ResNet-101 Trained on YFCC100m Geotagged Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622726895993*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"aa8df1cb-9f52-4314-b05b-9567d6a0daec"],

Cell[BoxData["\<\"ResNet-152 Trained on ImageNet Competition Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622727753953*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"5d2030ff-8e6c-4036-bd0b-02b6bf8c9ef2"],

Cell[BoxData["\<\"ResNet-50 Trained on ImageNet Competition Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622728625451*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"6e553b4f-2bfe-4418-a550-e9706157687e"],

Cell[BoxData["\<\"Sentiment Language Model Trained on Amazon Product Review \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622729486862*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"b61ccd85-8df5-4b4b-a4e9-a07e9ab2fff7"],

Cell[BoxData["\<\"Single-Image Depth Perception Net Trained on Depth in the \
Wild Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622730324233*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"430a4f61-467b-4ad3-897d-de64ceecec0a"],

Cell[BoxData["\<\"Single-Image Depth Perception Net Trained on NYU Depth V2 \
and Depth in the Wild Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227312040854`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"87d5b889-46a8-421e-81c7-429c49efd05e"],

Cell[BoxData["\<\"Single-Image Depth Perception Net Trained on NYU Depth V2 \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622732552528*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"261e6566-d560-4010-a87e-a933eb45e1ef"],

Cell[BoxData["\<\"Squeeze-and-Excitation Net Trained on ImageNet Competition \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622733496352*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"bc7c682b-7027-42b2-9254-3c3444d34257"],

Cell[BoxData["\<\"SqueezeNet V1.1 Trained on ImageNet Competition Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622734403605*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"4d99423a-840b-450f-911e-4b4ec2359d50"],

Cell[BoxData["\<\"SSD-VGG-300 Trained on PASCAL VOC Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622734408964*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"dd8b67f8-f60d-499d-93e1-87c0ec5038f7"],

Cell[BoxData["\<\"SSD-VGG-512 Trained on MS-COCO Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622735266602*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"6c10394d-2cca-4e1e-b99e-aae5d23f4115"],

Cell[BoxData["\<\"SSD-VGG-512 Trained on PASCAL VOC2007, PASCAL VOC2012 and \
MS-COCO Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622736116954*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"2d383cb3-43d5-4293-a211-4b6c294c35e8"],

Cell[BoxData["\<\"U-Net Trained on Glioblastoma-Astrocytoma U373 Cells on a \
Polyacrylamide Substrate Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622736979303*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"1b314bcb-37c6-4fa3-a3ed-667ed9c2dfd7"],

Cell[BoxData["\<\"Unguided Volumetric Regression Net for 3D Face \
Reconstruction\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622737966085*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"796b0638-028a-4233-be83-2b4f37496812"],

Cell[BoxData["\<\"Vanilla CNN for Facial Landmark Regression\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622737974226*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"686b9b5b-aee9-4565-97cc-3b937e37fc1e"],

Cell[BoxData["\<\"Very Deep Net for Super-Resolution\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622738838073*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"9f054529-5fb2-4b46-9b29-4126c7aa41a1"],

Cell[BoxData["\<\"VGG-16 Trained on ImageNet Competition Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227396970787`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"d94767b4-cd4d-4bfd-a3d8-c80c2513ca8c"],

Cell[BoxData["\<\"VGG-19 Trained on ImageNet Competition Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227396983624`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"f360a150-6fc0-437f-8589-23bab442121a"],

Cell[BoxData["\<\"VGGish Feature Extractor Trained on YouTube Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622739699396*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"55d9ba14-0066-49a2-a8b3-fe5f9cff82ac"],

Cell[BoxData["\<\"Wide ResNet-50-2 Trained on ImageNet Competition \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.7686227405601063`*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"25d915d2-1728-4221-b2d9-f571165c1245"],

Cell[BoxData["\<\"Wolfram AudioIdentify V1 Trained on AudioSet Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622741392218*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"f72537dd-7eff-49e4-ad36-d638e28a6063"],

Cell[BoxData["\<\"Wolfram C Character-Level Language Model V1\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622742266294*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"eac1adfc-360e-48e1-a53c-eb71a455268d"],

Cell[BoxData["\<\"Wolfram English Character-Level Language Model V1\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622743087162*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"5b62a441-c765-4400-a2f0-06f15ee112fe"],

Cell[BoxData["\<\"Wolfram ImageIdentify Net V1\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622743092628*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"f321a1e9-2402-48b9-9d26-28dd6131c9b9"],

Cell[BoxData["\<\"Wolfram JavaScript Character-Level Language Model V1\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622743147489*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"5c1b7fd5-1433-4c01-956b-73a24a054e84"],

Cell[BoxData["\<\"Wolfram LaTeX Character-Level Language Model V1\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622744001067*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"081f8d66-c225-4976-bc53-3ed6451e5d8c"],

Cell[BoxData["\<\"Wolfram Python Character-Level Language Model V1\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622744899626*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"86b62196-af98-4b66-901f-84b000fcccd0"],

Cell[BoxData["\<\"Yahoo Open NSFW Model V1\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622745744708*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"42eedbb2-3fa9-405f-85be-aedf96db10cd"],

Cell[BoxData["\<\"YOLO V2 Trained on MS-COCO Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622746561078*^9},
 CellLabel->
  "During evaluation of \
In[356]:=",ExpressionUUID->"150e59d9-ca2c-4264-b8f0-0ab04e6cc506"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "localModels"}]], "Input",
 CellChangeTimes->{{3.7296653227341013`*^9, 3.729665324605151*^9}},
 CellLabel->
  "In[357]:=",ExpressionUUID->"8d11d115-3004-4184-b43f-fb7ca5bb2081"],

Cell[BoxData["73"], "Output",
 CellChangeTimes->{3.750850699144477*^9, 3.7508518694786777`*^9, 
  3.750853189055777*^9, 3.7508535409282827`*^9, 3.75085379067905*^9, 
  3.750853960631365*^9, 3.750854289293282*^9, 3.750854759588641*^9, 
  3.768622750263761*^9},
 CellLabel->
  "Out[357]=",ExpressionUUID->"0c46f4cd-cf62-4ddd-842d-528381277366"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"modelNamesLocal", "=", 
   RowBox[{"Keys", "@", "localModels"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.729658530959771*^9, 3.7296585630493183`*^9}, {
  3.729658594565292*^9, 3.7296585987324953`*^9}, {3.750835933650886*^9, 
  3.750835936710208*^9}, {3.750839639091902*^9, 3.750839639613751*^9}},
 CellLabel->
  "In[358]:=",ExpressionUUID->"1e3af1b3-f54e-4b67-8159-bead2b84277c"],

Cell[CellGroupData[{

Cell["\:6709\:95ee\:9898\:7684\:6a21\:578bCheck", "Subsection",
 CellChangeTimes->{{3.729660339258312*^9, 
  3.7296603507391453`*^9}},ExpressionUUID->"463dfe99-08ae-4325-bd51-\
8f47319912fd"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Print", "@", "i"}], ";", 
     RowBox[{"NetModel", "[", "i", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "modelNamesLocal"}], "}"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.729658571987094*^9, 3.72965861772283*^9}, {
   3.729661118536256*^9, 3.729661127244802*^9}, 3.7297654984190297`*^9, 
   3.7508396421537437`*^9, 3.750839918917626*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"cef40bb5-65dc-4407-b3e4-bf4574dda49c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cloud\:6a21\:578b", "Section",
 CellChangeTimes->{{3.729661406706025*^9, 
  3.7296614119464207`*^9}},ExpressionUUID->"b92e28b0-0fdb-45eb-97a7-\
f55474bac15e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cloudModels", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"Select", "[", 
     RowBox[{"fullModels", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "\[Equal]", "CloudObject"}], 
       "&"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.729661502229171*^9, 3.72966153031419*^9}},
 CellLabel->
  "In[359]:=",ExpressionUUID->"0da16756-5146-4874-abba-abe8d48b9bca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cloudModels", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.729665343023795*^9, 3.729665344969215*^9}},
 CellLabel->
  "In[360]:=",ExpressionUUID->"863ff8e4-0bcf-42bf-8d66-96f72857ee67"],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{3.7508507118305826`*^9, 3.7508532001322002`*^9, 
  3.750853541043806*^9, 3.750853790820869*^9, 3.7508539608395567`*^9, 
  3.750854295639224*^9, 3.750854759621759*^9, 3.7508548369919643`*^9, 
  3.7686228605781603`*^9},
 CellLabel->
  "Out[360]=",ExpressionUUID->"bc74f885-54d6-40c2-b0d0-edcb1b8b6b0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modelNamesCloud", "=", 
  RowBox[{"Keys", "@", "cloudModels"}]}]], "Input",
 CellChangeTimes->{{3.729662387298018*^9, 3.729662391585185*^9}, 
   3.750839630595429*^9, 3.768622872601232*^9},
 CellLabel->
  "In[363]:=",ExpressionUUID->"14d47839-b895-47ce-9155-128776ffe3df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"BERT Trained on BookCorpus and English Wikipedia Data\"\>", 
   ",", "\<\"Enhanced Super-Resolution GAN Trained on DIV2K, Flickr2K and OST \
Data\"\>", ",", "\<\"GPT Transformer Trained on BookCorpus Data\"\>", 
   ",", "\<\"LeNet\"\>", 
   ",", "\<\"Sentiment Language Model Trained on Amazon Product Review Data\"\
\>", ",", "\<\"Squeeze-and-Excitation Net Trained on ImageNet Competition \
Data\"\>", ",", "\<\"SSD-VGG-300 Trained on PASCAL VOC Data\"\>", 
   ",", "\<\"U-Net Trained on Glioblastoma-Astrocytoma U373 Cells on a \
Polyacrylamide Substrate Data\"\>", 
   ",", "\<\"VGGish Feature Extractor Trained on YouTube Data\"\>", 
   ",", "\<\"Wolfram AudioIdentify V1 Trained on AudioSet Data\"\>", 
   ",", "\<\"Wolfram C Character-Level Language Model V1\"\>", 
   ",", "\<\"Wolfram JavaScript Character-Level Language Model V1\"\>", 
   ",", "\<\"Wolfram LaTeX Character-Level Language Model V1\"\>", 
   ",", "\<\"Wolfram Python Character-Level Language Model V1\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.768622872974552*^9},
 CellLabel->
  "Out[363]=",ExpressionUUID->"b9a5e3a7-5ba8-47f4-96b8-25ec6c9ae03c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:6709\:95ee\:9898\:7684\:6a21\:578bCheck", "Subsection",
 CellChangeTimes->{{3.729660339258312*^9, 
  3.7296603507391453`*^9}},ExpressionUUID->"53a5fd18-3e42-45ab-bf1c-\
7417623f634e"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Print", "@", "i"}], ";", 
     RowBox[{"NetModel", "[", "i", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "modelNamesCloud"}], "}"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.729658571987094*^9, 3.72965861772283*^9}, {
   3.729661118536256*^9, 3.729661127244802*^9}, 3.7297654984190297`*^9, 
   3.750839593874959*^9, 3.75083964701814*^9, 3.750839922184045*^9, 
   3.7508507371958127`*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"eadd701d-0750-4dd2-93b3-d0b385e46cf1"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"ResourceRemove", "@", 
     RowBox[{"ResourceObject", "[", "#", "]"}]}], "&"}], "/@", 
   "modelNamesCloud"}], "*)"}]], "Input",
 CellChangeTimes->{{3.75083966940473*^9, 3.750839685445093*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"3d813e6a-65de-439f-afce-bb9e90a36f36"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"assoNames2UUID", "=", 
    RowBox[{"Association", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "->", 
        RowBox[{"NetModel", "[", 
         RowBox[{"#", ",", "\"\<UUID\>\""}], "]"}]}], "&"}], "/@", "names"}], 
     "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.750841287476591*^9, 3.750841316966543*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"1aeaf4ce-8204-42c3-8aa6-323f60f09b43"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"assoNames2UUID", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "10"}], "]"}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.750841307698707*^9, 3.750841361081904*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"93dcdc6d-c64f-4fde-a78d-d619ef4db792"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:6a21\:578b\:5bfc\:51fa", "Section",
 CellChangeTimes->{{3.750841061602456*^9, 
  3.750841064272957*^9}},ExpressionUUID->"1dc902d7-82c3-4593-82de-\
6e1d9f02259f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"filePathProcess", "[", "filefile_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "dir", "}"}], ",", "\n", 
    RowBox[{"Which", "[", "\n", 
     RowBox[{
      RowBox[{"StringMatchQ", "[", 
       RowBox[{"$SystemID", ",", 
        RowBox[{"\"\<MacOSX\>\"", "~~", "__"}]}], "]"}], ",", "\n", 
      RowBox[{"dir", "=", 
       RowBox[{"StringTrim", "[", 
        RowBox[{"filefile", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<file://\>\"", ",", "\"\<file:\\\\\\\\\>\"", ",", 
           "\"\<file:\\\\\>\""}], "}"}]}], "]"}]}], "\n", ",", "\n", 
      RowBox[{"StringMatchQ", "[", 
       RowBox[{"$SystemID", ",", 
        RowBox[{"\"\<Windows\>\"", "~~", "__"}]}], "]"}], ",", "\n", 
      RowBox[{"dir", "=", 
       RowBox[{"StringTrim", "[", 
        RowBox[{"filefile", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<file:///\>\"", ",", "\"\<file:\\\\\\\\\>\"", ",", 
           "\"\<file:\\\\\>\""}], "}"}]}], "]"}]}], "\n", ",", "\n", 
      RowBox[{"StringMatchQ", "[", 
       RowBox[{"$SystemID", ",", 
        RowBox[{"\"\<Linux\>\"", "~~", "__"}]}], "]"}], ",", "\n", 
      RowBox[{"dir", "=", 
       RowBox[{"StringTrim", "[", 
        RowBox[{"filefile", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<file://\>\"", ",", "\"\<file:\\\\\\\\\>\"", ",", 
           "\"\<file:\\\\\>\""}], "}"}]}], "]"}]}], "\n", ",", "\n", "True", 
      ",", "\n", 
      RowBox[{
       RowBox[{"Print", "@", "filefile"}], ";", "\n", 
       RowBox[{"Print", "@", "\"\<Problem@fun@filePathProcess@\>\""}], ";", 
       RowBox[{"Abort", "[", "]"}], ";"}]}], "\n", "\n", "]"}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.750850784961195*^9, 3.750850842497472*^9}, {
  3.7508510114430895`*^9, 3.7508510785627623`*^9}, {3.7508532254587793`*^9, 
  3.750853232605937*^9}, {3.750853365652336*^9, 3.750853369304504*^9}, {
  3.750853410660233*^9, 3.750853421929493*^9}, {3.750854374121972*^9, 
  3.750854410318775*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"332a26b0-ac47-45f1-b7d2-967921665b44"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "exportModels", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"force", "\[Rule]", "False"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"exportModels", "[", 
   RowBox[{"modelName_", ",", "dirExport_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fileResource", ",", "dir", ",", "fileDest", ",", "dirDest", ",", "uuid",
       ",", "file1", ",", "file2", ",", "file"}], "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"dir", "=", 
      RowBox[{"filePathProcess", "[", 
       RowBox[{"fileResource", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"ResourceObject", "[", "modelName", "]"}], "[", 
          "\"\<ResourceLocations\>\"", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"file1", "=", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
        "dir", ",", "\"\<download/EvaluationNet/41f18e3b11f833a6/data\>\"", 
         ",", "\"\<data.WLNet\>\""}], "}"}], "]"}]}], ";", "\n", 
     RowBox[{"file2", "=", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
        "dir", ",", "\"\<download/EvaluationNet/41f18e3b11f833a6/\>\"", ",", 
         "\"\<data.WLNet\>\""}], "}"}], "]"}]}], ";", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FileExistsQ", "@", "file1"}], ",", 
       RowBox[{"file", "=", "file1"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"FileExistsQ", "@", "file2"}], ",", 
         RowBox[{"file", "=", "file2"}], ",", 
         RowBox[{"Print", "@", "\"\<file not exist\>\""}]}], "]"}]}], "]"}], 
     ";", "\n", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "file", "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"uuid", "=", 
         RowBox[{"NetModel", "[", 
          RowBox[{"modelName", ",", "\"\<UUID\>\""}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"fileDest", "=", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{"dirExport", ",", "uuid"}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"DirectoryQ", "@", "dirExport"}], ",", "Nothing", ",", 
          RowBox[{"CreateDirectory", "[", "dirExport", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"FileExistsQ", "@", "fileDest"}], ",", 
          RowBox[{
           RowBox[{"Print", "[", "\"\<File exist\>\"", "]"}], ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "force", "]"}], ",", 
             RowBox[{
              RowBox[{"Print", "[", "\"\<Force Mode\>\"", "]"}], ";", 
              RowBox[{"DeleteFile", "@", "fileDest"}], ";", 
              RowBox[{"CopyFile", "[", 
               RowBox[{"file", ",", "fileDest"}], "]"}]}]}], "]"}]}], "\n", 
          ",", "\n", 
          RowBox[{"CopyFile", "[", 
           RowBox[{"file", ",", "fileDest"}], "]"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\n", "]"}]}]}], "Code",
 CellChangeTimes->{{3.750841073010614*^9, 3.75084109873876*^9}, {
  3.750841380717806*^9, 3.750841564736937*^9}, {3.7508416333643093`*^9, 
  3.750841648413525*^9}, {3.750848566297301*^9, 3.750848613909597*^9}, {
  3.750848703894684*^9, 3.750848731436099*^9}, {3.7508487794388475`*^9, 
  3.7508488016834154`*^9}, {3.750848856136467*^9, 3.7508489788655643`*^9}, {
  3.7508490611257844`*^9, 3.7508490646782928`*^9}, {3.7508498818654804`*^9, 
  3.7508499901232414`*^9}, {3.750850026414281*^9, 3.750850033439511*^9}, {
  3.750850096644642*^9, 3.7508501879766245`*^9}, {3.750850219935239*^9, 
  3.750850232816822*^9}, {3.7508503222748117`*^9, 3.750850397834977*^9}, {
  3.7508532430123367`*^9, 3.750853264787838*^9}, {3.750853992326885*^9, 
  3.7508539941224127`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"e423bdf3-463b-430f-9744-f12d2ad43c44"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"exportModels", "[", 
     RowBox[{"#", ",", "\"\<C:/Users/hypergroups/Downloads/NetModels\>\""}], 
     "]"}], "&"}], "/@", 
   RowBox[{"names", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.75084156906122*^9, 3.7508415948594007`*^9}, {
   3.750845361834161*^9, 3.7508453738670125`*^9}, {3.750845411415692*^9, 
   3.750845435739703*^9}, {3.75084854010528*^9, 3.7508485527644577`*^9}, 
   3.750848645235407*^9, {3.7508488080693536`*^9, 3.7508488299753633`*^9}, {
   3.7508491046993666`*^9, 3.7508491049856014`*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"8da2afe0-d1e6-41fa-80a0-acbe9923fcc8"]
}, Closed]],

Cell[CellGroupData[{

Cell["\:6a21\:578b\:5b89\:88c5", "Section",
 CellChangeTimes->{{3.750837704788781*^9, 
  3.7508377136981363`*^9}},ExpressionUUID->"49a99a7b-bb04-4625-b1bb-\
66d3c3b708d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "modelInstallFile", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"force", "\[Rule]", "True"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelInstallFile", "[", 
   RowBox[{"modelName_", ",", "file_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dir", ",", "fileDest", ",", "dirDest"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dir", "=", 
      RowBox[{"filePathProcess", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ResourceObject", "[", "modelName", "]"}], "[", 
         "\"\<ResourceLocations\>\"", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fileDest", "=", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
        "dir", ",", "\"\<download/EvaluationNet/41f18e3b11f833a6/data\>\"", 
         ",", "\"\<data.WLNet\>\""}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dirDest", "=", 
      RowBox[{"DirectoryName", "@", "fileDest"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ResourceRemove", "[", 
      RowBox[{"ResourceObject", "@", "modelName"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"DirectoryQ", "@", "dirDest"}], ",", "Nothing", ",", 
       RowBox[{"CreateDirectory", "[", "dirDest", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "force", "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"FileExistsQ", "@", "fileDest"}], ",", 
         RowBox[{"DeleteFile", "@", "fileDest"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"CopyFile", "[", 
      RowBox[{"file", ",", "fileDest"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Quit", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Code",
 CellChangeTimes->{{3.750837718668891*^9, 3.750837738796072*^9}, {
   3.7508377881743517`*^9, 3.750837852344181*^9}, {3.750839185684266*^9, 
   3.7508393705111837`*^9}, {3.750839406872201*^9, 3.7508394133878803`*^9}, {
   3.7508397258908873`*^9, 3.750839768035808*^9}, {3.7508399864491167`*^9, 
   3.750840007544651*^9}, {3.750840498706341*^9, 3.7508405032223063`*^9}, {
   3.750850873848709*^9, 3.7508508817346396`*^9}, {3.75085192656715*^9, 
   3.7508519278626895`*^9}, 3.750851965070279*^9, {3.76862354366298*^9, 
   3.76862355612663*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"ac6a2755-b4d4-4363-a1fa-e4a115d8a6cf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "modelInstallUUID", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"force", "\[Rule]", "True"}], ",", 
     RowBox[{"TimeLimit", "\[Rule]", "10"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelInstallUUID", "[", 
   RowBox[{"uuid_", ",", "dirIn_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "modelName", ",", "dir", ",", "fileDest", ",", "dirDest", ",", 
      "assoConfig", ",", "file", ",", "fileConfig", ",", "obj"}], "}"}], ",", 
    "\n", 
    RowBox[{
     RowBox[{"modelName", "=", 
      RowBox[{"assoUUID2ModelName", "@", "uuid"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dir", "=", 
      RowBox[{"filePathProcess", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ResourceObject", "[", "modelName", "]"}], "[", 
         "\"\<ResourceLocations\>\"", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fileDest", "=", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
        "dir", ",", "\"\<download/EvaluationNet/41f18e3b11f833a6/data\>\"", 
         ",", "\"\<data.WLNet\>\""}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dirDest", "=", 
      RowBox[{"DirectoryName", "@", "fileDest"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ResourceRemove", "[", 
      RowBox[{"obj", "=", 
       RowBox[{"ResourceObject", "@", "modelName"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TimeConstrained", "[", 
      RowBox[{
       RowBox[{"ResourceData", "[", "obj", "]"}], ",", 
       RowBox[{"OptionValue", "[", "TimeLimit", "]"}]}], "]"}], ";", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"DirectoryQ", "@", "dirDest"}], ",", "Nothing", ",", 
       RowBox[{"CreateDirectory", "[", "dirDest", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "force", "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"FileExistsQ", "@", "fileDest"}], ",", 
         RowBox[{"DeleteFile", "@", "fileDest"}]}], "]"}]}], "]"}], ";", "\n", 
     RowBox[{"file", "=", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"dirIn", ",", "uuid"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "file", "]"}], ",", 
       RowBox[{
        RowBox[{"CopyFile", "[", 
         RowBox[{"file", ",", "fileDest"}], "]"}], ";", "\n", 
        RowBox[{"fileConfig", "=", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{"dir", ",", "\"\<metadata\>\"", ",", "\"\<put.wl\>\""}], 
           "}"}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"FileExistsQ", "@", "fileConfig"}], ",", "\n", 
          RowBox[{
           RowBox[{"assoConfig", "=", 
            RowBox[{"Import", "[", "fileConfig", "]"}]}], ";", "\n", 
           RowBox[{
            RowBox[{
             RowBox[{
             "assoConfig", "[", "\"\<ContentElementLocations\>\"", "]"}], 
             "[", "\"\<EvaluationNet\>\"", "]"}], "=", 
            RowBox[{"LocalObject", "[", "dirDest", "]"}]}], ";", "\n", 
           RowBox[{"Export", "[", 
            RowBox[{"fileConfig", ",", "assoConfig"}], "]"}]}], "\n", ",", 
          RowBox[{
          "Print", "[", "\"\< model config file not exist\>\"", "]"}]}], 
         "]"}]}], "\n", ",", 
       RowBox[{"Print", "[", "\"\< model file not exist\>\"", "]"}]}], "\n", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Code",
 CellChangeTimes->{{3.750840587241912*^9, 3.750840619612749*^9}, {
   3.750840738387142*^9, 3.7508408281352873`*^9}, {3.750840921851522*^9, 
   3.750840934478334*^9}, {3.750840981007454*^9, 3.750840988736978*^9}, {
   3.750843297059803*^9, 3.750843298299491*^9}, 3.750843485939691*^9, 
   3.750843542800771*^9, 3.7508435954301586`*^9, {3.7508436275987167`*^9, 
   3.75084363409137*^9}, {3.750843935816737*^9, 3.7508439475613585`*^9}, {
   3.7508439907340117`*^9, 3.7508439911877995`*^9}, {3.7508440359950843`*^9, 
   3.750844059386588*^9}, {3.750844147772442*^9, 3.7508441634196367`*^9}, {
   3.7508443369013395`*^9, 3.750844365032685*^9}, {3.75084465001734*^9, 
   3.7508446505668716`*^9}, {3.7508446993844438`*^9, 3.7508447164757795`*^9}, 
   3.750844749827671*^9, {3.7508448428660946`*^9, 3.750844908808911*^9}, {
   3.750845068907672*^9, 3.7508451274163494`*^9}, 3.750845926558365*^9, 
   3.750847202083899*^9, {3.7508475256066017`*^9, 3.7508475284555817`*^9}, {
   3.750847569067329*^9, 3.750847680479224*^9}, {3.7508477217667627`*^9, 
   3.750847741319127*^9}, {3.750847913114273*^9, 3.750847920254722*^9}, 
   3.750848002757783*^9, 3.750850810321439*^9, 3.750850857482436*^9, {
   3.750850897277114*^9, 3.7508508987930636`*^9}, {3.750851514986259*^9, 
   3.750851523316004*^9}, {3.7508517459945974`*^9, 3.7508517462598886`*^9}, {
   3.7508524834667625`*^9, 3.750852559214383*^9}, {3.7508526256069975`*^9, 
   3.7508526477109413`*^9}, {3.7508536656754923`*^9, 3.750853704903716*^9}, {
   3.7508538421808968`*^9, 3.7508538774688272`*^9}, {3.7508539841657867`*^9, 
   3.750853986309334*^9}, {3.7508572250094967`*^9, 3.750857235922509*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"23657023-c320-4629-8971-e868867edda4"],

Cell[CellGroupData[{

Cell["Single", "Subsection",
 CellChangeTimes->{{3.7686230025185213`*^9, 
  3.768623002986268*^9}},ExpressionUUID->"48dfc438-e7ac-4254-9e77-\
b68c1b8c94f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "modelName2Install", "=", 
   "\"\<SSD-VGG-300 Trained on PASCAL VOC Data\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.750841018220148*^9, 3.7508410230108*^9}, {
  3.7686231169081907`*^9, 3.768623119212223*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"60515250-6581-4035-8fbf-0539579fc0a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetModel", "[", "modelName2Install", "]"}]], "Input",
 CellChangeTimes->{{3.7686235784997*^9, 3.768623578887497*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"6daecb3f-26fd-4b5f-bbaf-86ea575bffa5"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.768623625458818*^9, 3.7686237099096613`*^9, 
  3.768623763874069*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"53d1e074-669a-4ece-8699-569fde995ac1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetModel", "[", 
  RowBox[{"modelName2Install", ",", "\"\<ElementContent\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.76862312027185*^9, 3.76862313417824*^9}, 
   3.7686237321308737`*^9, {3.768623767707314*^9, 
   3.7686237799585114`*^9}},ExpressionUUID->"d0145cb4-a5d2-4966-be21-\
03cce24de4d5"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.0149], {
                   GrayLevel[0.6], 
                   Thickness[0.03], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.0149], {
                   GrayLevel[0.6], 
                   Thickness[0.03], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                   
                   JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                   FaceForm[
                    GrayLevel[0.9]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                   FaceForm[
                    GrayLevel[0.6]], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-1., -0.9999999999999999}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.5999999999999999}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-0.4, 
                    2.4492935982947065`*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3., 1.8369701987210297`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 0.,
                     BaseStyle -> GrayLevel[0.4]], {-2., 
                    1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "15", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "27", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[15], 
                    Skeleton[27]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1., -0.9999999999999999}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"ClassProb\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["ClassProb", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-1., 6.123233995736766*^-17}], 
                    Offset[{12, 12}, {-1., 6.123233995736766*^-17}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 0.,
                     BaseStyle -> GrayLevel[0.4]], {-1., 
                    6.123233995736766*^-17}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Boxes\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Boxes", Bold]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-3., 1.8369701987210297`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"ClassProb\"", TraditionalForm], 
                    Offset[{0, -7}, {-1., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{0, -15}, {-1., 6.123233995736766*^-17}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Boxes\"", TraditionalForm], 
                    Offset[{0, -7}, {0., 0.}], {0, 1.}, Automatic, {1, 0}]}}, 
                    FontColor -> GrayLevel[0.5], StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"3\"", "\"300\"", 
                    "\"300\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8732\"", "\"20\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-1.4, -0.5999999999999999}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8732\"", "\"4\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8732\"", "\"2\"", "\"2\""},
                     "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-0.4, 
                    2.4492935982947065`*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}]}, FontColor -> 
                    GrayLevel[0.7], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-1., -0.9999999999999999}, \
{-1., 6.123233995736766*^-17}, {0., 0.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 8, 24, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {221., 101.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 28.}, {28., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Outputs", "Boxes"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 300, 300}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {300, 300}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.4823529411764706, 0.4588235294117647, 
                    0.40784313725490196`}, "VarianceImage" -> None, 
                    "$Version" -> "12.0.8", "Interleaving" -> False]], 
                    Association[
                    "ClassProb" -> 
                    NeuralNetworks`TensorT[{8732, 20}, NeuralNetworks`RealT], 
                    "Boxes" -> 
                    NeuralNetworks`TensorT[{8732, 2, 2}, 
                    NeuralNetworks`RealT]], 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 300, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "ClassProb" -> 
                    NeuralNetworks`TensorT[{8732, 20}, NeuralNetworks`RealT], 
                    "Locs" -> NeuralNetworks`TensorT[{8732, 4}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{3, 300, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["ClassProb1" -> 
                    NeuralNetworks`TensorT[{4, 20, 38, 38}, 
                    NeuralNetworks`RealT], "Locs1" -> 
                    NeuralNetworks`TensorT[{4, 4, 38, 38}, 
                    NeuralNetworks`RealT], "ClassProb2" -> 
                    NeuralNetworks`TensorT[{6, 20, 19, 19}, 
                    NeuralNetworks`RealT], "Locs2" -> 
                    NeuralNetworks`TensorT[{6, 4, 19, 19}, 
                    NeuralNetworks`RealT], "ClassProb3" -> 
                    NeuralNetworks`TensorT[{6, 20, 10, 10}, 
                    NeuralNetworks`RealT], "Locs3" -> 
                    NeuralNetworks`TensorT[{6, 4, 10, 10}, 
                    NeuralNetworks`RealT], "ClassProb4" -> 
                    NeuralNetworks`TensorT[{6, 20, 5, 5}, 
                    NeuralNetworks`RealT], "Locs4" -> 
                    NeuralNetworks`TensorT[{6, 4, 5, 5}, 
                    NeuralNetworks`RealT], "ClassProb5" -> 
                    NeuralNetworks`TensorT[{4, 20, 3, 3}, 
                    NeuralNetworks`RealT], "Locs5" -> 
                    NeuralNetworks`TensorT[{4, 4, 3, 3}, 
                    NeuralNetworks`RealT], "ClassProb6" -> 
                    NeuralNetworks`TensorT[{4, 20, 1, 1}, 
                    NeuralNetworks`RealT], "Locs6" -> 
                    NeuralNetworks`TensorT[{4, 4, 1, 1}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["blockNet4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["conv1a" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{64, 3, 3,
                     3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 3, 
                    "ChannelGroups" -> 1, "$InputSize" -> {300, 300}, 
                    "$OutputSize" -> {300, 300}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 300, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 300, 300}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{3, 300, 
                    300}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]]], "conv1b" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{64, 64, 
                    3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "ChannelGroups" -> 1, "$InputSize" -> {300, 300}, 
                    "$OutputSize" -> {300, 300}, "$WeightsInputChannels" -> 
                    64], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 300, 300}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]]], "pool1" -> 
                    Association["Type" -> "Pooling", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 64, "$InputSize" -> {300, 300}, 
                    "$OutputSize" -> {150, 150}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 150, 
                    150}, NeuralNetworks`RealT]]], "conv2a" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{128, 64, 
                    3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "ChannelGroups" -> 1, "$InputSize" -> {150, 150}, 
                    "$OutputSize" -> {150, 150}, "$WeightsInputChannels" -> 
                    64], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 150, 150}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 150, 150}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{64, 150, 
                    150}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]]], "conv2b" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{128, 128,
                     3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {150, 150}, 
                    "$OutputSize" -> {150, 150}, "$WeightsInputChannels" -> 
                    128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 150, 150}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 150, 150}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]]], "pool2" -> 
                    Association["Type" -> "Pooling", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 128, "$InputSize" -> {150, 150}, 
                    "$OutputSize" -> {75, 75}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 75, 
                    75}, NeuralNetworks`RealT]]], "conv3a" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{256, 128,
                     3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {75, 75}, 
                    "$OutputSize" -> {75, 75}, "$WeightsInputChannels" -> 
                    128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 75, 75}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 75, 75}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 75, 
                    75}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]]], "conv3b" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{256, 256,
                     3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {75, 75}, 
                    "$OutputSize" -> {75, 75}, "$WeightsInputChannels" -> 
                    256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 75, 75}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 75, 75}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]]], "conv3c" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{256, 256,
                     3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {75, 75}, 
                    "$OutputSize" -> {75, 75}, "$WeightsInputChannels" -> 
                    256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 75, 75}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 75, 75}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]]], "pool3" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Padding", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> {{0, 0}, {0, 1}, {0, 1}}, "Padding" -> 
                    0., "$Rank" -> 3, "$InputSize" -> {256, 75, 75}, 
                    "$OutputSize" -> {256, 76, 76}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 76, 
                    76}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Pooling", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 256, "$InputSize" -> {76, 76}, 
                    "$OutputSize" -> {38, 38}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 76, 
                    76}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 38, 
                    38}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 38, 
                    38}, NeuralNetworks`RealT]]], "conv4a" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{512, 256,
                     3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {38, 38}, 
                    "$OutputSize" -> {38, 38}, "$WeightsInputChannels" -> 
                    256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 38, 38}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]], "conv4b" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{512, 512,
                     3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {38, 38}, 
                    "$OutputSize" -> {38, 38}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 38, 38}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]], "conv4c" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{512, 512,
                     3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {38, 38}, 
                    "$OutputSize" -> {38, 38}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 38, 38}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1b", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2b", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3b", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3c", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4b", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4c", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{3, 300, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 38, 38}, 
                    NeuralNetworks`RealT]]], "blockNet7" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["pool4" -> 
                    Association["Type" -> "Pooling", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 512, "$InputSize" -> {38, 38}, 
                    "$OutputSize" -> {19, 19}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]], "conv5a" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{512, 512,
                     3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {19, 19}, 
                    "$OutputSize" -> {19, 19}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 19, 19}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]], "conv5b" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{512, 512,
                     3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {19, 19}, 
                    "$OutputSize" -> {19, 19}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 19, 19}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]], "conv5c" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{512, 512,
                     3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {19, 19}, 
                    "$OutputSize" -> {19, 19}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 19, 19}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]], "pool5" -> 
                    Association["Type" -> "Pooling", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 512, "$InputSize" -> {19, 19}, 
                    "$OutputSize" -> {19, 19}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]], "conv6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{1024, 
                    512, 3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{6, 6}, {6, 6}}, 
                    "Dilation" -> {6, 6}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {19, 19}, 
                    "$OutputSize" -> {19, 19}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 19, 19}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]]], "conv7" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{1024, 
                    1024, 1, 1}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1024, 
                    "ChannelGroups" -> 1, "$InputSize" -> {19, 19}, 
                    "$OutputSize" -> {19, 19}, "$WeightsInputChannels" -> 
                    1024], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 19, 19}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5b", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5c", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv7", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 19, 19}, 
                    NeuralNetworks`RealT]]], "blockNet8" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["conv8a" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{256, 
                    1024, 1, 1}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1024, 
                    "ChannelGroups" -> 1, "$InputSize" -> {19, 19}, 
                    "$OutputSize" -> {19, 19}, "$WeightsInputChannels" -> 
                    1024], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 19, 
                    19}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 19, 19}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 19, 
                    19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 19, 
                    19}, NeuralNetworks`RealT]]], "pad2" -> 
                    Association["Type" -> "Padding", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> {{0, 0}, {1, 1}, {1, 1}}, 
                    "Padding" -> 0., "$Rank" -> 3, 
                    "$InputSize" -> {256, 19, 19}, 
                    "$OutputSize" -> {256, 21, 21}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 21, 
                    21}, NeuralNetworks`RealT]]], "conv8b" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{512, 256,
                     3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {21, 21}, 
                    "$OutputSize" -> {10, 10}, "$WeightsInputChannels" -> 
                    256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 21, 21}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 10, 
                    10}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 10, 10}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 10, 
                    10}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 10, 
                    10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 21, 
                    21}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 10, 
                    10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "conv8a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pad2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv8a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv8b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pad2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv8b", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]]], "blockNet9" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["conv9a" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{128, 512,
                     1, 1}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {10, 10}, 
                    "$OutputSize" -> {10, 10}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 10, 
                    10}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 10, 10}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 10, 
                    10}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 10, 
                    10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 10, 
                    10}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 10, 
                    10}, NeuralNetworks`RealT]]], "conv9b" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{256, 128,
                     3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {10, 10}, 
                    "$OutputSize" -> {5, 5}, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 5, 
                    5}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 5, 5}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 5, 5},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 5, 
                    5}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 10, 
                    10}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 5, 
                    5}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "conv9a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv9b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv9a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv9b", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 5, 5}, 
                    NeuralNetworks`RealT]]], "multiboxLayer4" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["ClassProb4" -> 
                    NeuralNetworks`TensorT[{6, 20, 5, 5}, 
                    NeuralNetworks`RealT], "Locs4" -> 
                    NeuralNetworks`TensorT[{6, 4, 5, 5}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["multiboxClasses" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{126, 256,
                     3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{126}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 126, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {5, 5}, 
                    "$OutputSize" -> {5, 5}, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{126, 5, 
                    5}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{6, 21, 5, 5}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{126, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 21, 5, 
                    5}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Softmax", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 21, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 21, 5, 
                    5}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[2, 21], 
                    Span[1, -1], 
                    Span[1, -1]}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{6, 21, 5, 
                    5}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 20, 5, 
                    5}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 5, 5},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 20, 5, 
                    5}, NeuralNetworks`RealT]]], "multiboxLocs" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 5, 5},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 4, 5, 
                    5}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["convloc" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{24, 256, 
                    3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{24}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association["OutputChannels" -> 24, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {5, 5}, "$OutputSize" -> {5, 5}, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 5, 5},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{24, 5, 5},
                     NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{24, 5, 5},
                     NeuralNetworks`RealT]]], "reshape" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{6, 4, 5, 5}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{24, 5, 5}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{6, 4, 5, 5}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Locs4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Outputs", "Output"]}], 
                    "multiboxLayer1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["ClassProb1" -> 
                    NeuralNetworks`TensorT[{4, 20, 38, 38}, 
                    NeuralNetworks`RealT], "Locs1" -> 
                    NeuralNetworks`TensorT[{4, 4, 38, 38}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["channelNorm1" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    TwoWayRule[1, 3]]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{38, 38, 
                    512}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Max, 1.*^-20, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Log, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {38, 38, 512}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{38, 38, 
                    512}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{38, 38, 
                    512}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Softmax", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> -1],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{38, 38, 512}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{38, 38, 
                    512}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Sqrt], 
                    "$Dimensions" -> {38, 38, 512}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{38, 38, 
                    512}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{38, 38, 
                    512}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[
                    TwoWayRule[1, 3]]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{38, 38, 
                    512}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "ConstantTimes", "Arrays" -> 
                    Association["Scaling" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Parameters" -> 
                    Association["Dimensions" -> {512, 38, 38}, 
                    "$ArrayDimensions" -> {512, 38, 38}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]], "multiboxClasses" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{84, 512, 
                    3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 84, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {38, 38}, 
                    "$OutputSize" -> {38, 38}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{84, 38, 
                    38}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 21, 38, 38}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{84, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 21, 38,
                     38}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Softmax", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 21, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 21, 38,
                     38}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[2, 21], 
                    Span[1, -1], 
                    Span[1, -1]}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{4, 21, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 20, 38,
                     38}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 20, 38,
                     38}, NeuralNetworks`RealT]]], "multiboxLocs" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 4, 38, 
                    38}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["convloc" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{16, 512, 
                    3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association["OutputChannels" -> 16, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {38, 38}, "$OutputSize" -> {38, 38}, 
                    "$WeightsInputChannels" -> 512], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{16, 38, 
                    38}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{16, 38, 
                    38}, NeuralNetworks`RealT]]], "reshape" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 4, 38, 38}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 4, 38, 
                    38}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "channelNorm1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "channelNorm1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "channelNorm1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Locs1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Outputs", "Output"]}], 
                    "multiboxLayer2" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["ClassProb2" -> 
                    NeuralNetworks`TensorT[{6, 20, 19, 19}, 
                    NeuralNetworks`RealT], "Locs2" -> 
                    NeuralNetworks`TensorT[{6, 4, 19, 19}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["multiboxLocs" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 4, 19, 
                    19}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["convloc" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{24, 1024,
                     3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{24}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association["OutputChannels" -> 24, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {19, 19}, "$OutputSize" -> {19, 19}, 
                    "$WeightsInputChannels" -> 1024], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{24, 19, 
                    19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{24, 19, 
                    19}, NeuralNetworks`RealT]]], "reshape" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{6, 4, 19, 19}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{24, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 4, 19, 
                    19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Outputs", "Output"]}], 
                    "multiboxClasses" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{126, 
                    1024, 3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{126}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 126, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1024, 
                    "ChannelGroups" -> 1, "$InputSize" -> {19, 19}, 
                    "$OutputSize" -> {19, 19}, "$WeightsInputChannels" -> 
                    1024], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{126, 19, 
                    19}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{6, 21, 19, 19}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{126, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 21, 19,
                     19}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Softmax", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 21, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 21, 19,
                     19}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[2, 21], 
                    Span[1, -1], 
                    Span[1, -1]}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{6, 21, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 20, 19,
                     19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 20, 19,
                     19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Locs2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Outputs", "Output"]}], 
                    "blockNet10" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["conv10a" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{128, 256,
                     1, 1}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {5, 5}, 
                    "$OutputSize" -> {5, 5}, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 5, 
                    5}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 5, 5}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 5, 5},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 5, 
                    5}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 5, 5},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 5, 
                    5}, NeuralNetworks`RealT]]], "conv10b" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{256, 128,
                     3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {5, 5}, 
                    "$OutputSize" -> {3, 3}, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 3, 
                    3}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 3, 3}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 3, 3},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 3, 
                    3}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 5, 5},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 3, 
                    3}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "conv10a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv10b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv10a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv10b", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 3, 3}, 
                    NeuralNetworks`RealT]]], "multiboxLayer5" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["ClassProb5" -> 
                    NeuralNetworks`TensorT[{4, 20, 3, 3}, 
                    NeuralNetworks`RealT], "Locs5" -> 
                    NeuralNetworks`TensorT[{4, 4, 3, 3}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["multiboxClasses" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{84, 256, 
                    3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 84, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {3, 3}, 
                    "$OutputSize" -> {3, 3}, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{84, 3, 3},
                     NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 21, 3, 3}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{84, 3, 3}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 21, 3, 3}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Softmax", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 21, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 21, 3, 
                    3}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[2, 21], 
                    Span[1, -1], 
                    Span[1, -1]}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{4, 21, 3, 
                    3}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 20, 3, 
                    3}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 3, 3},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 20, 3, 
                    3}, NeuralNetworks`RealT]]], "multiboxLocs" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 3, 3},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 4, 3, 
                    3}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["convloc" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{16, 256, 
                    3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association["OutputChannels" -> 16, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {3, 3}, "$OutputSize" -> {3, 3}, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 3, 3},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{16, 3, 3},
                     NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{16, 3, 3},
                     NeuralNetworks`RealT]]], "reshape" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 4, 3, 3}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 3, 3}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 4, 3, 3}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb5"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Locs5"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Outputs", "Output"]}], 
                    "blockNet11" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["conv11a" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{128, 256,
                     1, 1}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {3, 3}, 
                    "$OutputSize" -> {3, 3}, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 3, 
                    3}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 3, 3}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 3, 3},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 3, 
                    3}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 3, 3},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 3, 
                    3}, NeuralNetworks`RealT]]], "conv11b" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{256, 128,
                     3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {3, 3}, 
                    "$OutputSize" -> {1, 1}, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 1, 
                    1}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 1, 1}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 1, 1},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 1, 
                    1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 3, 3},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 1, 
                    1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "conv11a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv11b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv11a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv11b", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 1, 1}, 
                    NeuralNetworks`RealT]]], "multiboxLayer6" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 1, 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["ClassProb6" -> 
                    NeuralNetworks`TensorT[{4, 20, 1, 1}, 
                    NeuralNetworks`RealT], "Locs6" -> 
                    NeuralNetworks`TensorT[{4, 4, 1, 1}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["multiboxLocs" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 1, 1},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 4, 1, 
                    1}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["convloc" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{16, 256, 
                    3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association["OutputChannels" -> 16, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {1, 1}, "$OutputSize" -> {1, 1}, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 1, 1},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{16, 1, 1},
                     NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 1, 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{16, 1, 1},
                     NeuralNetworks`RealT]]], "reshape" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 4, 1, 1}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 1, 1}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 4, 1, 1}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Outputs", "Output"]}], 
                    "multiboxClasses" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{84, 256, 
                    3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{84}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 84, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {1, 1}, 
                    "$OutputSize" -> {1, 1}, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 1, 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{84, 1, 1},
                     NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 21, 1, 1}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{84, 1, 1}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 21, 1, 1}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Softmax", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 21, 1, 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 21, 1, 
                    1}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[2, 21], 
                    Span[1, -1], 
                    Span[1, -1]}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{4, 21, 1, 
                    1}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 20, 1, 
                    1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 1, 1},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 20, 1, 
                    1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Locs6"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb6"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Outputs", "Output"]}], 
                    "multiboxLayer3" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["ClassProb3" -> 
                    NeuralNetworks`TensorT[{6, 20, 10, 10}, 
                    NeuralNetworks`RealT], "Locs3" -> 
                    NeuralNetworks`TensorT[{6, 4, 10, 10}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["multiboxClasses" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{126, 512,
                     3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{126}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 126, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {10, 10}, 
                    "$OutputSize" -> {10, 10}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{126, 10, 
                    10}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{6, 21, 10, 10}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{126, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 21, 10,
                     10}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Softmax", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 21, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 21, 10,
                     10}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[2, 21], 
                    Span[1, -1], 
                    Span[1, -1]}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{6, 21, 10, 
                    10}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 20, 10,
                     10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 10, 
                    10}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 20, 10,
                     10}, NeuralNetworks`RealT]]], "multiboxLocs" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 10, 
                    10}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 4, 10, 
                    10}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["convloc" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{24, 512, 
                    3, 3}, NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{24}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association["OutputChannels" -> 24, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {10, 10}, "$OutputSize" -> {10, 10}, 
                    "$WeightsInputChannels" -> 512], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 10, 
                    10}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{24, 10, 
                    10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{24, 10, 
                    10}, NeuralNetworks`RealT]]], "reshape" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{6, 4, 10, 10}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{24, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 4, 10, 
                    10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Locs3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "blockNet4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet9", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet9", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer4", "Outputs", "ClassProb4"], 
                    NeuralNetworks`NetPath["Outputs", "Locs4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer4", "Outputs", "Locs4"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer1", "Outputs", "ClassProb1"], 
                    NeuralNetworks`NetPath["Outputs", "Locs1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer1", "Outputs", "Locs1"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer2", "Outputs", "ClassProb2"], 
                    NeuralNetworks`NetPath["Outputs", "Locs2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer2", "Outputs", "Locs2"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb5"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer5", "Outputs", "ClassProb5"], 
                    NeuralNetworks`NetPath["Outputs", "Locs5"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer5", "Outputs", "Locs5"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb6"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer6", "Outputs", "ClassProb6"], 
                    NeuralNetworks`NetPath["Outputs", "Locs6"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer6", "Outputs", "Locs6"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer3", "Outputs", "ClassProb3"], 
                    NeuralNetworks`NetPath["Outputs", "Locs3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer3", "Outputs", "Locs3"]}], "2" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 20, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{38, 38, 4, 20}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{38, 38, 4, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{5776, 20}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 20, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{5776, 20}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 20, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{19, 19, 6, 20}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{19, 19, 6, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2166, 20}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 20, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2166, 20}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 20, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10, 10, 6, 20}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{10, 10, 6, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{600, 20}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 20, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{600, 20}, NeuralNetworks`RealT]]],
                     "5" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 20, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{5, 5, 6, 20}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{5, 5, 6, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{150, 20}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 20, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{150, 20}, NeuralNetworks`RealT]]],
                     "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 20, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{3, 3, 4, 20}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 3, 4, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{36, 20}, NeuralNetworks`RealT]]]],
                     "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 20, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{36, 20}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 20, 1, 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 1, 4, 20}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 1, 4, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 20}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 20, 1, 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 20}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{5776, 20}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{2166, 20}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{600, 20}, NeuralNetworks`RealT], 
                    "4" -> NeuralNetworks`TensorT[{150, 20}, 
                    NeuralNetworks`RealT], "5" -> 
                    NeuralNetworks`TensorT[{36, 20}, NeuralNetworks`RealT], 
                    "6" -> NeuralNetworks`TensorT[{4, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8732, 20}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 4, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{38, 38, 4, 4}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{38, 38, 4, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{5776, 4}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 4, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{5776, 4}, NeuralNetworks`RealT]]],
                     "10" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 4, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{19, 19, 6, 4}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{19, 19, 6, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2166, 4}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 4, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2166, 4}, NeuralNetworks`RealT]]],
                     "11" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 4, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10, 10, 6, 4}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{10, 10, 6, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{600, 4}, NeuralNetworks`RealT]]]],
                     "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 4, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{600, 4}, NeuralNetworks`RealT]]], 
                    "12" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 4, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{5, 5, 6, 4}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{5, 5, 6, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{150, 4}, NeuralNetworks`RealT]]]],
                     "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 4, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{150, 4}, NeuralNetworks`RealT]]], 
                    "13" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 4, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{3, 3, 4, 4}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 3, 4, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{36, 4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 4, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{36, 4}, NeuralNetworks`RealT]]], 
                    "14" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 4, 1, 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 1, 4, 4}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 1, 4, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 4, 1, 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 4}, NeuralNetworks`RealT]]], 
                    "15" -> Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{5776, 4}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{2166, 4}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{600, 4}, NeuralNetworks`RealT], 
                    "4" -> NeuralNetworks`TensorT[{150, 4}, 
                    NeuralNetworks`RealT], "5" -> 
                    NeuralNetworks`TensorT[{36, 4}, NeuralNetworks`RealT], 
                    "6" -> NeuralNetworks`TensorT[{4, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8732, 4}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Locs2"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Locs3"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Locs4"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Locs5"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Locs6"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "ClassProb1"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "ClassProb2"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "ClassProb3"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "ClassProb4"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "ClassProb5"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "ClassProb6"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Locs1"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "5"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "6"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "ClassProb"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "15", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "15", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "5"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "6"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Locs"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"]}], "2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8732, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Boxes" -> NeuralNetworks`TensorT[{8732, 2, 2}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "cx" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 1}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732, 4}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "ConstantTimes", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Dimensions" -> {8732}, "$ArrayDimensions" -> {8732}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "ConstantPlus", "Arrays" -> 
                    Association["Biases" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Dimensions" -> {8732}, "$ArrayDimensions" -> {8732}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 300., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8732}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732, 4}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "width" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 3}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732, 4}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.2, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8732}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "ConstantTimes", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Dimensions" -> {8732}, "$ArrayDimensions" -> {8732}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 300., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8732}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732, 4}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "minx" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Subtract, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "cy" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 2}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732, 4}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "ConstantTimes", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Dimensions" -> {8732}, "$ArrayDimensions" -> {8732}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "ConstantPlus", "Arrays" -> 
                    Association["Biases" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Dimensions" -> {8732}, "$ArrayDimensions" -> {8732}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 300., 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8732}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732, 4}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "height" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 4}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732, 4}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.2, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8732}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "ConstantTimes", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "Dimensions" -> {8732}, "$ArrayDimensions" -> {8732}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 300., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8732}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732, 4}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "miny" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Subtract, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "maxx" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Plus, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "maxy" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Plus, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "cat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{34928}, 
                    NeuralNetworks`RealT]]], "reshape" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 8732}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{34928}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 8732}, 
                    NeuralNetworks`RealT]]], "transpose" -> 
                    Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[
                    TwoWayRule[1, 2]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732, 4}, 
                    NeuralNetworks`RealT]]], "reshapePoint" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{8732, 2, 2}]], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{8732, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8732, 2, 2}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "cx", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "cy", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "height", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "width", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "maxx", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "cx", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "minx", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "cx", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "maxx", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "width", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "minx", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "width", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "cat", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "minx", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "maxy", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "cy", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "miny", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "cy", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "maxy", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "height", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "miny", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "height", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "cat", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "miny", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "cat", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "maxx", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "cat", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "maxy", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "cat", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "transpose", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshapePoint", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "transpose", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Boxes"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshapePoint", "Outputs", "Output"]}]], 
                    Association[]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"ClassProb\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8732\"", 
                    "\"20\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {"", "", "", "", 
                    StyleBox[
                    TemplateBox[{"\"Boxes\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8732\"", 
                    "\"2\"", "\"2\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.768623134486052*^9, 3.7686237352969313`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"671d222f-349a-43ba-a511-dbdd0364af57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetModel", "[", 
  RowBox[{"modelName2Install", ",", "\"\<UUID\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.76862312027185*^9, 3.768623144312621*^9}},
 CellLabel->
  "In[366]:=",ExpressionUUID->"4d525263-db88-42c7-8376-33b5590d9ae2"],

Cell[BoxData["\<\"48388bf5-0ca5-4019-872a-f524f1ecc22b\"\>"], "Output",
 CellChangeTimes->{3.768623144734666*^9},
 CellLabel->
  "Out[366]=",ExpressionUUID->"16822cdf-bb08-47cf-98bc-76d35bca6f83"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"modelInstallFile", "[", 
  RowBox[{
  "modelName2Install", ",", 
   "\"\</Users/hypergroups/Nutstore/temp_1/483/48388bf5-0ca5-4019-872a-\
f524f1ecc22b/download/EvaluationNet/41f18e3b11f833a6/data/data.WLNet\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7508390674359493`*^9, 3.750839079239149*^9}, {
   3.750840546185697*^9, 3.750840546591528*^9}, 3.7686234950569677`*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"06bf844b-71ee-4ce9-a733-90d30a1d7ca0"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Input",
 CellChangeTimes->{3.7686237428431053`*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"3fee54fb-096a-428a-b4fa-1910c3f5fd28"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.768623748196213*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"94dd2992-4ead-4bca-8836-caa157e33772"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Batch", "Subsection",
 CellChangeTimes->{{3.768622978243882*^9, 
  3.7686229789613533`*^9}},ExpressionUUID->"75c37bae-db53-4c96-8bbe-\
3e3795f74a04"],

Cell[BoxData[
 RowBox[{
  RowBox[{"assoModelName2UUID", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "->", 
       RowBox[{"NetModel", "[", 
        RowBox[{"#", ",", "\"\<UUID\>\""}], "]"}]}], "&"}], "/@", "names"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7508434083006163`*^9, 3.750843443595317*^9}, {
  3.750843515299249*^9, 3.7508435194850655`*^9}, {3.750843574067235*^9, 
  3.7508436028254004`*^9}},
 CellLabel->
  "In[351]:=",ExpressionUUID->"57bd539e-6851-4da3-a88a-52c2fbe28b97"],

Cell[BoxData[
 RowBox[{
  RowBox[{"assoUUID2ModelName", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"NetModel", "[", 
        RowBox[{"#", ",", "\"\<UUID\>\""}], "]"}], "\[Rule]", "#"}], "&"}], "/@",
      "names"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7508436406059647`*^9, 3.7508436516025844`*^9}, {
  3.750843837156334*^9, 3.750843844434888*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"b9c7219c-a364-4ddb-ae44-c90ee8a58bf9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Keys", "[", "assoUUID2ModelName", "]"}], "\[Equal]", 
  RowBox[{"Values", "[", "assoModelName2UUID", "]"}]}]], "Input",
 CellChangeTimes->{{3.7508438780381093`*^9, 3.7508439098620815`*^9}},
 CellLabel->
  "In[353]:=",ExpressionUUID->"02895c7c-42ae-4487-a27f-0d75e250ad01"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.750853330849678*^9, 3.750853519811984*^9, 
  3.75085373515764*^9, 3.7508539260804768`*^9, 3.7508539611314373`*^9, 
  3.750854276407547*^9, 3.750854320760494*^9, 3.750854747903214*^9, 
  3.750855237840673*^9, 3.750857240324335*^9, 3.768622664893745*^9},
 CellLabel->
  "Out[353]=",ExpressionUUID->"a625184b-8985-46e6-92b7-2da386016135"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "dirResource", "=", "\"\</Users/hypergroups/Downloads/NetModels\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.75084070783076*^9, 3.7508407113230753`*^9}, 
   3.7508433176228633`*^9, 3.7508469021712513`*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"f8261d44-60fe-4ab6-8dd3-259478130248"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KeySelect", "[", 
  RowBox[{"assoModelName2UUID", ",", 
   RowBox[{
    RowBox[{"#", "\[Equal]", "modelName2Install"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7508469324634447`*^9, 3.750846944048592*^9}, {
  3.750847134032243*^9, 3.7508471483310204`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"e7d400c6-688f-490f-8d4b-21f46b47f502"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.750850959193688*^9, 3.7508517270502124`*^9, 
  3.750853341615963*^9, 3.750853438955112*^9, 3.7508539612680387`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"e87026de-3c5b-41a1-84b9-29e77e3e5902"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"models2Add", "=", 
  RowBox[{
  "{", "\"\<Wide ResNet-50-2 Trained on ImageNet Competition Data\>\"", 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.750854943995469*^9, 3.7508549765167627`*^9}, 
   3.750855236169558*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"21600396-eacc-44d6-8b85-ecc838e5aff3"],

Cell[BoxData[
 RowBox[{"{", "\<\"Wide ResNet-50-2 Trained on ImageNet Competition Data\"\>",
   "}"}]], "Output",
 CellChangeTimes->{{3.750854977059291*^9, 3.750854990343652*^9}, 
   3.7508552378973017`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"1a110840-ba24-43fb-9f59-44e6bd53e9bf"]
}, Open  ]],

Cell["\<\
\:8bf4\:660e\:ff1a\:670910\:79d2\:4e0b\:8f7d\:65f6\:95f4\:ff0c\:4e0b\:8f7d10\
\:79d2\:949f\:540e\:653e\:5f03@\:76ee\:7684\:662f\:8ba9Mma\:4e0b\:8f7d\:4e00\
\:4e9b\:76f8\:5173\:975e\:6a21\:578b\:7684\:6587\:4ef6\:ff0c\:6240\:4ee5\:770b\
\:5230\:6709\:4e9b\:62a5\:9519\:4e0d\:7528\:7740\:6025Abort[]\:3002\
\>", "Text",
 CellChangeTimes->{{3.750857150563839*^9, 
  3.750857209314351*^9}},ExpressionUUID->"eacd835d-f912-42c9-a54b-\
a0c927337750"],

Cell["\:9000\:51fa\:5185\:6838\:540eQuit\:ff0c\:7136\:540e\:5b89\:88c5\:624d\
\:4f1a\:751f\:6548\:3002\:4e5f\:53ef\:4ee5\:65b0\:542f\:52a8\:4e2a\:5185\:6838\
\:53bb\:6d4b\:8bd5\:3002", "Text",
 CellChangeTimes->{{3.750857254703384*^9, 
  3.7508572800232067`*^9}},ExpressionUUID->"1fea98fb-c7ed-48b5-a060-\
dfe8464f6290"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"modelInstallUUID", "[", 
    RowBox[{"#", ",", "dirResource", ",", 
     RowBox[{"TimeLimit", "\[Rule]", "10"}]}], "]"}], "&"}], "/@", 
  RowBox[{"KeyTake", "[", 
   RowBox[{"assoModelName2UUID", ",", "models2Add"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.750840669403934*^9, 3.7508407308592567`*^9}, {
   3.750840965231338*^9, 3.750840993870389*^9}, {3.7508433901670647`*^9, 
   3.750843392861865*^9}, {3.7508434536479664`*^9, 3.7508434558181686`*^9}, 
   3.750843593163215*^9, 3.750844739586034*^9, 3.750846950382638*^9, {
   3.750847192013503*^9, 3.750847196916197*^9}, {3.750853590603529*^9, 
   3.7508535995663023`*^9}, 3.750855006044137*^9, {3.7508572157665577`*^9, 
   3.750857220670377*^9}},ExpressionUUID->"73846e26-3d72-4382-ab4b-\
df7547afc286"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Wide ResNet-50-2 Trained on ImageNet Competition Data\"\>", 
   "\[Rule]", \
"\<\"/home/hyper/.Wolfram/Objects/Resources/58a/58aed759-7ada-46c8-9bce-\
dc7938690a0e/metadata/put.wl\"\>"}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.750853841375025*^9, 3.75085389745936*^9, 
  3.75085396133702*^9, 3.7508543606059017`*^9, 3.750854431464172*^9, 
  3.750854997424408*^9, 3.750855044011732*^9, 3.7508552540993967`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"190b4280-69d9-4574-9f93-cc0e0e74efc5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2462, 1404},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 294, 4, 146, "Title",ExpressionUUID->"6c110a99-20a1-4969-b9e2-cbffc4928333"],
Cell[CellGroupData[{
Cell[899, 30, 207, 4, 103, "Chapter",ExpressionUUID->"18d89f6a-4102-473a-a76b-e95e6d172eba"],
Cell[1109, 36, 244, 5, 78, "Code",ExpressionUUID->"d9864a60-5c03-44c1-9235-6f1d92bddb3d"],
Cell[CellGroupData[{
Cell[1378, 45, 202, 3, 78, "Code",ExpressionUUID->"4275cb64-9498-4dae-87b1-f769207e0793"],
Cell[1583, 50, 607, 9, 52, "Output",ExpressionUUID->"02755620-30e5-49b4-a93b-a4ae1c8d9fbb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2227, 64, 169, 3, 101, "Section",ExpressionUUID->"c0707f88-64f6-4740-be01-9767dec1a2f8"],
Cell[2399, 69, 413, 6, 53, "Text",ExpressionUUID->"d8e6489b-4e06-4144-98b9-5d7ed698da97"],
Cell[CellGroupData[{
Cell[2837, 79, 1121, 29, 78, "Input",ExpressionUUID->"ea332dc2-df8e-42e5-abe1-223aaa6462ac"],
Cell[CellGroupData[{
Cell[3983, 112, 400, 7, 36, "Print",ExpressionUUID->"a57ed45e-e9d9-417f-a915-560f6edf4cf6"],
Cell[4386, 121, 400, 7, 36, "Print",ExpressionUUID->"b75e112c-5a9b-4146-ba31-f4cb6f8fad7a"],
Cell[4789, 130, 405, 7, 36, "Print",ExpressionUUID->"4fe2e6ef-26b4-410f-8c9b-00d17347e6ab"],
Cell[5197, 139, 385, 6, 36, "Print",ExpressionUUID->"276b1e62-db01-4589-8af4-63cad76a1e0b"],
Cell[5585, 147, 391, 6, 36, "Print",ExpressionUUID->"58086122-3eda-44e0-b87d-20ffc368b19d"],
Cell[5979, 155, 407, 7, 36, "Print",ExpressionUUID->"40b345df-2a27-4fd4-9b6b-d5f988e5ffab"],
Cell[6389, 164, 400, 7, 36, "Print",ExpressionUUID->"02e2c593-b9b5-49cc-a9f2-6ec32072b7e2"],
Cell[6792, 173, 416, 7, 36, "Print",ExpressionUUID->"885c79e8-69d4-4efd-b71a-6dfeeddd6b6a"],
Cell[7211, 182, 394, 7, 36, "Print",ExpressionUUID->"60248257-7afa-4fc5-800c-d27156692062"],
Cell[7608, 191, 402, 7, 36, "Print",ExpressionUUID->"635a95e2-fd03-4d9b-9fe1-20c883f7965e"],
Cell[8013, 200, 397, 7, 36, "Print",ExpressionUUID->"476d807c-614a-4758-8c5d-8523e46455b8"],
Cell[8413, 209, 376, 6, 36, "Print",ExpressionUUID->"3e986b44-ac96-441b-9682-01019e1ce50b"],
Cell[8792, 217, 474, 8, 36, "Print",ExpressionUUID->"cebebd0e-cc30-46de-bee5-fc2ff144d404"],
Cell[9269, 227, 413, 7, 36, "Print",ExpressionUUID->"ee6a82bf-1b30-437b-bb41-7d4267082326"],
Cell[9685, 236, 411, 7, 36, "Print",ExpressionUUID->"e4475b5b-6f95-4eea-9445-fc27e7e429b1"],
Cell[10099, 245, 399, 7, 36, "Print",ExpressionUUID->"98d33185-b5a2-43e5-97bd-3e04530f7d05"],
Cell[10501, 254, 389, 6, 36, "Print",ExpressionUUID->"bb75b3bb-febf-4e7d-acc1-a8fe172f24f5"],
Cell[10893, 262, 401, 7, 36, "Print",ExpressionUUID->"9b5c47cd-f086-4696-b699-3bffa58c19b2"],
Cell[11297, 271, 406, 7, 36, "Print",ExpressionUUID->"086936ff-d7c1-49ca-9e2a-3ff6878d9fe6"],
Cell[11706, 280, 420, 7, 36, "Print",ExpressionUUID->"41c604a3-86c7-4aea-9d44-87edf47d7876"],
Cell[12129, 289, 421, 7, 36, "Print",ExpressionUUID->"61fe9f38-cefb-4feb-ae19-e49d1494b540"],
Cell[12553, 298, 379, 6, 36, "Print",ExpressionUUID->"51f9bf8a-c052-4655-be55-4a4304ccd201"],
Cell[12935, 306, 420, 7, 36, "Print",ExpressionUUID->"5ebbd936-7261-47ec-8755-aa3c8915846f"],
Cell[13358, 315, 384, 6, 36, "Print",ExpressionUUID->"22bdd281-d73c-46d8-a2fc-8e50d3b0e53a"],
Cell[13745, 323, 382, 6, 36, "Print",ExpressionUUID->"c903fab8-00e3-45d7-a21b-4e4bc5e8d4a8"],
Cell[14130, 331, 383, 6, 36, "Print",ExpressionUUID->"9a985553-bde0-47c0-b53e-095cedf98d12"],
Cell[14516, 339, 384, 6, 36, "Print",ExpressionUUID->"c5d41cdb-8867-468c-ab26-eabe31878572"],
Cell[14903, 347, 384, 6, 36, "Print",ExpressionUUID->"72b14f2b-6d32-4a73-9e1f-d84bf50a06b4"],
Cell[15290, 355, 418, 7, 36, "Print",ExpressionUUID->"9acaee3d-cabb-4783-896e-36c2e71cb172"],
Cell[15711, 364, 390, 6, 36, "Print",ExpressionUUID->"50c84926-7378-46fe-87e0-2aad61b322d9"],
Cell[16104, 372, 392, 6, 36, "Print",ExpressionUUID->"e78f3549-6b2c-47bb-bc7f-6a20c186ff60"],
Cell[16499, 380, 389, 6, 36, "Print",ExpressionUUID->"c98ecd57-ae0c-4e26-82d8-9942a5c8f183"],
Cell[16891, 388, 389, 6, 36, "Print",ExpressionUUID->"bece71af-f321-47ca-ac21-3cb19ba5d9ff"],
Cell[17283, 396, 412, 7, 36, "Print",ExpressionUUID->"db0b8a23-c87f-4f9d-bbf3-a6c9c0ab349d"],
Cell[17698, 405, 416, 7, 36, "Print",ExpressionUUID->"d93e6001-07cd-48a4-9bbc-0efa7be80b9d"],
Cell[18117, 414, 397, 7, 36, "Print",ExpressionUUID->"e161dff3-3dcc-4100-ae85-579e7419229d"],
Cell[18517, 423, 399, 7, 36, "Print",ExpressionUUID->"938c6b2f-d886-4a16-b9f8-60290dea77df"],
Cell[18919, 432, 424, 7, 36, "Print",ExpressionUUID->"4d979953-5495-45d5-bbae-3fcf18a202da"],
Cell[19346, 441, 399, 7, 36, "Print",ExpressionUUID->"d78b9c42-3760-40a6-9460-861a90432ac6"],
Cell[19748, 450, 398, 7, 36, "Print",ExpressionUUID->"23420e93-1f14-4aa8-981b-52398cc121f9"],
Cell[20149, 459, 409, 7, 36, "Print",ExpressionUUID->"052c31b0-894c-4b3c-a5fb-dc2565dc2071"],
Cell[20561, 468, 410, 7, 36, "Print",ExpressionUUID->"adbcdca0-e27c-411b-b3d3-8ba13587f917"],
Cell[20974, 477, 422, 7, 36, "Print",ExpressionUUID->"245b6096-3d6c-4c5c-b98a-0cc96170f2fb"],
Cell[21399, 486, 398, 7, 36, "Print",ExpressionUUID->"1068daca-a92e-40be-99c3-c2d808071e87"],
Cell[21800, 495, 423, 7, 36, "Print",ExpressionUUID->"cf6ae7d4-9268-44a4-bd6d-4f3cf8f90ef4"],
Cell[22226, 504, 387, 6, 36, "Print",ExpressionUUID->"56b51f7d-905e-4867-a8e0-373e16a9c3eb"],
Cell[22616, 512, 410, 7, 36, "Print",ExpressionUUID->"49d27ef8-ad17-4dbd-a049-8867a1ce8f97"],
Cell[23029, 521, 396, 7, 36, "Print",ExpressionUUID->"ac0014b9-da49-43c1-9a65-b62a3d864038"],
Cell[23428, 530, 382, 6, 36, "Print",ExpressionUUID->"0b73a153-ff88-45a4-ae70-143f5be783c1"],
Cell[23813, 538, 398, 7, 36, "Print",ExpressionUUID->"df336f0a-fda0-40ec-ab10-367cec6333bb"],
Cell[24214, 547, 350, 6, 36, "Print",ExpressionUUID->"c1a12503-9b45-4031-86a4-d9251f2ebc81"],
Cell[24567, 555, 374, 6, 36, "Print",ExpressionUUID->"484af591-58d3-467c-85d4-3b1fc7d6662e"],
Cell[24944, 563, 405, 7, 36, "Print",ExpressionUUID->"cf73a228-fe61-4998-9e0d-006703136584"],
Cell[25352, 572, 411, 7, 36, "Print",ExpressionUUID->"481ac783-a57f-43ab-8001-bbf6572d7dc3"],
Cell[25766, 581, 415, 7, 36, "Print",ExpressionUUID->"86688d62-1c70-438f-b039-73c64d167143"],
Cell[26184, 590, 422, 7, 36, "Print",ExpressionUUID->"9d00dd12-9493-43c9-9f0a-00c0f7bc0579"],
Cell[26609, 599, 384, 6, 36, "Print",ExpressionUUID->"72ffa138-a340-48b4-aafa-b5b8003aaa89"],
Cell[26996, 607, 384, 6, 36, "Print",ExpressionUUID->"65b638d2-f77f-4fcf-8e0f-340e4c8ceadc"],
Cell[27383, 615, 397, 7, 36, "Print",ExpressionUUID->"23713dc6-2cdc-43ec-bc3f-0cee43a4efbd"],
Cell[27783, 624, 394, 7, 36, "Print",ExpressionUUID->"e4e6a135-10e4-4ccc-8cd0-20dc8a00ac88"],
Cell[28180, 633, 390, 6, 36, "Print",ExpressionUUID->"aa8df1cb-9f52-4314-b05b-9567d6a0daec"],
Cell[28573, 641, 394, 7, 36, "Print",ExpressionUUID->"5d2030ff-8e6c-4036-bd0b-02b6bf8c9ef2"],
Cell[28970, 650, 393, 7, 36, "Print",ExpressionUUID->"6e553b4f-2bfe-4418-a550-e9706157687e"],
Cell[29366, 659, 409, 7, 36, "Print",ExpressionUUID->"b61ccd85-8df5-4b4b-a4e9-a07e9ab2fff7"],
Cell[29778, 668, 414, 7, 36, "Print",ExpressionUUID->"430a4f61-467b-4ad3-897d-de64ceecec0a"],
Cell[30195, 677, 433, 7, 36, "Print",ExpressionUUID->"87d5b889-46a8-421e-81c7-429c49efd05e"],
Cell[30631, 686, 409, 7, 36, "Print",ExpressionUUID->"261e6566-d560-4010-a87e-a933eb45e1ef"],
Cell[31043, 695, 410, 7, 36, "Print",ExpressionUUID->"bc7c682b-7027-42b2-9254-3c3444d34257"],
Cell[31456, 704, 399, 7, 36, "Print",ExpressionUUID->"4d99423a-840b-450f-911e-4b4ec2359d50"],
Cell[31858, 713, 383, 6, 36, "Print",ExpressionUUID->"dd8b67f8-f60d-499d-93e1-87c0ec5038f7"],
Cell[32244, 721, 380, 6, 36, "Print",ExpressionUUID->"6c10394d-2cca-4e1e-b99e-aae5d23f4115"],
Cell[32627, 729, 417, 7, 36, "Print",ExpressionUUID->"2d383cb3-43d5-4293-a211-4b6c294c35e8"],
Cell[33047, 738, 434, 7, 36, "Print",ExpressionUUID->"1b314bcb-37c6-4fa3-a3ed-667ed9c2dfd7"],
Cell[33484, 747, 408, 7, 36, "Print",ExpressionUUID->"796b0638-028a-4233-be83-2b4f37496812"],
Cell[33895, 756, 387, 6, 36, "Print",ExpressionUUID->"686b9b5b-aee9-4565-97cc-3b937e37fc1e"],
Cell[34285, 764, 379, 6, 36, "Print",ExpressionUUID->"9f054529-5fb2-4b46-9b29-4126c7aa41a1"],
Cell[34667, 772, 390, 6, 36, "Print",ExpressionUUID->"d94767b4-cd4d-4bfd-a3d8-c80c2513ca8c"],
Cell[35060, 780, 390, 6, 36, "Print",ExpressionUUID->"f360a150-6fc0-437f-8589-23bab442121a"],
Cell[35453, 788, 395, 7, 36, "Print",ExpressionUUID->"55d9ba14-0066-49a2-a8b3-fe5f9cff82ac"],
Cell[35851, 797, 402, 7, 36, "Print",ExpressionUUID->"25d915d2-1728-4221-b2d9-f571165c1245"],
Cell[36256, 806, 396, 7, 36, "Print",ExpressionUUID->"f72537dd-7eff-49e4-ad36-d638e28a6063"],
Cell[36655, 815, 388, 6, 36, "Print",ExpressionUUID->"eac1adfc-360e-48e1-a53c-eb71a455268d"],
Cell[37046, 823, 396, 7, 36, "Print",ExpressionUUID->"5b62a441-c765-4400-a2f0-06f15ee112fe"],
Cell[37445, 832, 373, 6, 36, "Print",ExpressionUUID->"f321a1e9-2402-48b9-9d26-28dd6131c9b9"],
Cell[37821, 840, 399, 7, 36, "Print",ExpressionUUID->"5c1b7fd5-1433-4c01-956b-73a24a054e84"],
Cell[38223, 849, 394, 7, 36, "Print",ExpressionUUID->"081f8d66-c225-4976-bc53-3ed6451e5d8c"],
Cell[38620, 858, 395, 7, 36, "Print",ExpressionUUID->"86b62196-af98-4b66-901f-84b000fcccd0"],
Cell[39018, 867, 369, 6, 36, "Print",ExpressionUUID->"42eedbb2-3fa9-405f-85be-aedf96db10cd"],
Cell[39390, 875, 376, 6, 36, "Print",ExpressionUUID->"150e59d9-ca2c-4264-b8f0-0ab04e6cc506"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39815, 887, 215, 4, 46, "Input",ExpressionUUID->"8d11d115-3004-4184-b43f-fb7ca5bb2081"],
Cell[40033, 893, 342, 6, 52, "Output",ExpressionUUID->"0c46f4cd-cf62-4ddd-842d-528381277366"]
}, Open  ]],
Cell[40390, 902, 415, 8, 46, "Input",ExpressionUUID->"1e3af1b3-f54e-4b67-8159-bead2b84277c"],
Cell[CellGroupData[{
Cell[40830, 914, 191, 3, 81, "Subsection",ExpressionUUID->"463dfe99-08ae-4325-bd51-8f47319912fd"],
Cell[41024, 919, 530, 12, 46, "Input",ExpressionUUID->"cef40bb5-65dc-4407-b3e4-bf4574dda49c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41603, 937, 164, 3, 101, "Section",ExpressionUUID->"b92e28b0-0fdb-45eb-97a7-f55474bac15e"],
Cell[41770, 942, 502, 14, 46, "Input",ExpressionUUID->"0da16756-5146-4874-abba-abe8d48b9bca"],
Cell[CellGroupData[{
Cell[42297, 960, 214, 4, 46, "Input",ExpressionUUID->"863ff8e4-0bcf-42bf-8d66-96f72857ee67"],
Cell[42514, 966, 349, 6, 52, "Output",ExpressionUUID->"bc74f885-54d6-40c2-b0d0-edcb1b8b6b0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42900, 977, 296, 6, 46, "Input",ExpressionUUID->"14d47839-b895-47ce-9155-128776ffe3df"],
Cell[43199, 985, 1173, 20, 239, "Output",ExpressionUUID->"b9a5e3a7-5ba8-47f4-96b8-25ec6c9ae03c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44409, 1010, 191, 3, 81, "Subsection",ExpressionUUID->"53a5fd18-3e42-45ab-bf1c-7417623f634e"],
Cell[44603, 1015, 577, 13, 46, "Input",ExpressionUUID->"eadd701d-0750-4dd2-93b3-d0b385e46cf1"],
Cell[45183, 1030, 338, 8, 46, "Input",ExpressionUUID->"3d813e6a-65de-439f-afce-bb9e90a36f36"],
Cell[45524, 1040, 461, 12, 46, "Input",ExpressionUUID->"1aeaf4ce-8204-42c3-8aa6-323f60f09b43"],
Cell[45988, 1054, 288, 6, 46, "Input",ExpressionUUID->"93dcdc6d-c64f-4fde-a78d-d619ef4db792"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46325, 1066, 169, 3, 101, "Section",ExpressionUUID->"1dc902d7-82c3-4593-82de-6e1d9f02259f"],
Cell[46497, 1071, 2107, 49, 543, "Code",ExpressionUUID->"332a26b0-ac47-45f1-b7d2-967921665b44"],
Cell[48607, 1122, 4136, 95, 601, "Code",ExpressionUUID->"e423bdf3-463b-430f-9744-f12d2ad43c44"],
Cell[52746, 1219, 743, 17, 46, "Input",ExpressionUUID->"8da2afe0-d1e6-41fa-80a0-acbe9923fcc8"]
}, Closed]],
Cell[CellGroupData[{
Cell[53526, 1241, 171, 3, 78, "Section",ExpressionUUID->"49a99a7b-bb04-4625-b1bb-66d3c3b708d1"],
Cell[53700, 1246, 2677, 63, 369, "Code",ExpressionUUID->"ac6a2755-b4d4-4363-a1fa-e4a115d8a6cf"],
Cell[56380, 1311, 5519, 120, 659, "Code",ExpressionUUID->"23657023-c320-4629-8971-e868867edda4"],
Cell[CellGroupData[{
Cell[61924, 1435, 156, 3, 81, "Subsection",ExpressionUUID->"48dfc438-e7ac-4254-9e77-b68c1b8c94f7"],
Cell[62083, 1440, 329, 7, 46, "Input",ExpressionUUID->"60515250-6581-4035-8fbf-0539579fc0a7"],
Cell[CellGroupData[{
Cell[62437, 1451, 220, 3, 46, "Input",ExpressionUUID->"6daecb3f-26fd-4b5f-bbaf-86ea575bffa5"],
Cell[62660, 1456, 205, 3, 52, "Output",ExpressionUUID->"53d1e074-669a-4ece-8699-569fde995ac1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62902, 1464, 325, 7, 46, "Input",ExpressionUUID->"d0145cb4-a5d2-4966-be21-03cce24de4d5"],
Cell[63230, 1473, 236863, 4003, 112, "Output",ExpressionUUID->"671d222f-349a-43ba-a511-dbdd0364af57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300130, 5481, 259, 5, 46, "Input",ExpressionUUID->"4d525263-db88-42c7-8376-33b5590d9ae2"],
Cell[300392, 5488, 196, 3, 52, "Output",ExpressionUUID->"16822cdf-bb08-47cf-98bc-76d35bca6f83"]
}, Open  ]],
Cell[300603, 5494, 479, 9, 109, "Input",ExpressionUUID->"06bf844b-71ee-4ce9-a733-90d30a1d7ca0"],
Cell[CellGroupData[{
Cell[301107, 5507, 150, 2, 46, "Input",ExpressionUUID->"3fee54fb-096a-428a-b4fa-1910c3f5fd28"],
Cell[301260, 5511, 149, 2, 52, "Output",ExpressionUUID->"94dd2992-4ead-4bca-8836-caa157e33772"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[301458, 5519, 155, 3, 81, "Subsection",ExpressionUUID->"75c37bae-db53-4c96-8bbe-3e3795f74a04"],
Cell[301616, 5524, 540, 14, 46, "Input",ExpressionUUID->"57bd539e-6851-4da3-a88a-52c2fbe28b97"],
Cell[302159, 5540, 495, 13, 46, "Input",ExpressionUUID->"b9c7219c-a364-4ddb-ae44-c90ee8a58bf9"],
Cell[CellGroupData[{
Cell[302679, 5557, 307, 6, 46, "Input",ExpressionUUID->"02895c7c-42ae-4487-a27f-0d75e250ad01"],
Cell[302989, 5565, 388, 6, 52, "Output",ExpressionUUID->"a625184b-8985-46e6-92b7-2da386016135"]
}, Open  ]],
Cell[303392, 5574, 326, 7, 46, "Input",ExpressionUUID->"f8261d44-60fe-4ab6-8dd3-259478130248"],
Cell[CellGroupData[{
Cell[303743, 5585, 367, 7, 46, "Input",ExpressionUUID->"e7d400c6-688f-490f-8d4b-21f46b47f502"],
Cell[304113, 5594, 296, 4, 52, "Output",ExpressionUUID->"e87026de-3c5b-41a1-84b9-29e77e3e5902"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304446, 5603, 321, 7, 46, "Input",ExpressionUUID->"21600396-eacc-44d6-8b85-ecc838e5aff3"],
Cell[304770, 5612, 286, 5, 52, "Output",ExpressionUUID->"1a110840-ba24-43fb-9f59-44e6bd53e9bf"]
}, Open  ]],
Cell[305071, 5620, 453, 8, 53, "Text",ExpressionUUID->"eacd835d-f912-42c9-a54b-a0c927337750"],
Cell[305527, 5630, 320, 5, 53, "Text",ExpressionUUID->"1fea98fb-c7ed-48b5-a060-dfe8464f6290"],
Cell[CellGroupData[{
Cell[305872, 5639, 805, 15, 46, "Input",ExpressionUUID->"73846e26-3d72-4382-ab4b-df7547afc286"],
Cell[306680, 5656, 567, 9, 84, "Output",ExpressionUUID->"190b4280-69d9-4574-9f93-cc0e0e74efc5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

