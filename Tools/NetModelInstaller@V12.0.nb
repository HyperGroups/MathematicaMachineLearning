(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    303379,       5479]
NotebookOptionsPosition[    291244,       5315]
NotebookOutlinePosition[    291613,       5331]
CellTagsIndexPosition[    291570,       5328]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["NetModel\:5355\:6a21\:578b\:79bb\:7ebf\:5b89\:88c5", "Title",
 CellChangeTimes->{{3.729658377648466*^9, 3.729658378876129*^9}, {
  3.7508358786839123`*^9, 3.750835886408559*^9}, {3.7686226911766777`*^9, 
  3.7686227010795803`*^9}},ExpressionUUID->"6c110a99-20a1-4969-b9e2-\
cbffc4928333"],

Cell[CellGroupData[{

Cell["Tested@V12.0", "Chapter",
 CellChangeTimes->{{3.7297655111478815`*^9, 3.729765517711336*^9}, {
  3.768622659533669*^9, 
  3.76862268804139*^9}},ExpressionUUID->"18d89f6a-4102-473a-a76b-\
e95e6d172eba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"names", "=", 
   RowBox[{"NetModel", "[", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.729765453563237*^9, 3.72976546217865*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d9864a60-5c03-44c1-9235-6f1d92bddb3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"names", "//", "Length"}]], "Code",
 CellChangeTimes->{{3.750835889573781*^9, 3.750835891299892*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"4275cb64-9498-4dae-87b1-f769207e0793"],

Cell[BoxData["89"], "Output",
 CellChangeTimes->{
  3.7508531677773952`*^9, {3.7508535187858562`*^9, 3.750853528125177*^9}, {
   3.7508537338122272`*^9, 3.750853735274252*^9}, {3.7508539249334307`*^9, 
   3.750853926197432*^9}, {3.750854276329348*^9, 3.7508542784603252`*^9}, {
   3.7508547465692596`*^9, 3.7508547479342203`*^9}, 3.7508552377660713`*^9, 
   3.750857239856082*^9, {3.768622664694399*^9, 3.7686226650129843`*^9}, 
   3.7686235705177813`*^9, {3.768623691044553*^9, 3.76862369121425*^9}, 
   3.7686237479912663`*^9, {3.7686243606330624`*^9, 3.768624360820263*^9}, 
   3.7686244559224396`*^9, 3.7686245001151276`*^9, 3.7686247269947615`*^9, 
   3.7686251118346615`*^9, 3.7686254981206827`*^9, 3.7686256341767406`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"fb0d9ec5-aad7-4a2a-8d78-f438c1f5fc96"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:672c\:5730\:6a21\:578b", "Section",
 CellChangeTimes->{{3.729661399934244*^9, 
  3.729661402419812*^9}},ExpressionUUID->"c0707f88-64f6-4740-be01-\
9767dec1a2f8"],

Cell["\:5982\:679c\:6709\:62a5\:9519\:4fe1\:606f\:ff0c\:8bf4\:660e\:6a21\:578b\
\:8d44\:6e90\:6570\:636e\:6709\:4e9b\:4e0d\:5e72\:51c0\:6574\:9f50\:ff0c\:4e5f\
\:53ef\:4ee5\:624b\:52a8\:5220\:9664\:4e00\:4e9b\:6587\:4ef6\:5939\:3002", \
"Text",
 CellChangeTimes->{{3.750850621877915*^9, 3.7508506419452996`*^9}, {
   3.768622732759787*^9, 3.768622740294942*^9}, 
   3.76862516148435*^9},ExpressionUUID->"d8e6489b-4e06-4144-98b9-\
5d7ed698da97"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"localModels", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"fullModels", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Print", "@", "i"}], ";", 
          RowBox[{"i", "->", 
           RowBox[{
            RowBox[{"NetModel", "[", 
             RowBox[{"i", ",", "\"\<ContentElementLocations\>\""}], "]"}], 
            "@", "\"\<EvaluationNet\>\""}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "names"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "==", "LocalObject"}], "&"}]}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.729658427807651*^9, 3.7296585532031517`*^9}, {
  3.729661484623527*^9, 3.729661513421473*^9}, {3.750839550534251*^9, 
  3.750839551228814*^9}, {3.750844557256669*^9, 3.7508445585512104`*^9}, {
  3.750850667388322*^9, 3.750850677842391*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"ea332dc2-df8e-42e5-abe1-223aaa6462ac"],

Cell[CellGroupData[{

Cell[BoxData["\<\"2D Face Alignment Net Trained on 300W Large Pose \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243621170654`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"8d512eea-5153-45b8-8ddb-3f4f7bd45b28"],

Cell[BoxData["\<\"3D Face Alignment Net Trained on 300W Large Pose \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624362210665*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"250146d9-3e37-42b8-ab65-7f8839a185ce"],

Cell[BoxData["\<\"AdaIN-Style Trained on MS-COCO and Painter by Numbers \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624362210665*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"e11fc169-23fb-41d3-a732-704a51baa989"],

Cell[BoxData["\<\"Ademxapp Model A1 Trained on ADE20K Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624362210665*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"af2c4813-4b9f-44e5-83b9-56899837725f"],

Cell[BoxData["\<\"Ademxapp Model A1 Trained on Cityscapes Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624362210665*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"59addc03-1f2b-4a04-a6e8-0e02c6a8e6dc"],

Cell[BoxData["\<\"Ademxapp Model A1 Trained on PASCAL VOC2012 and MS-COCO \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624362226265*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"1163db42-0ff4-49e1-a7ea-da731588d320"],

Cell[BoxData["\<\"Ademxapp Model A Trained on ImageNet Competition \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.76862436486467*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"043fe416-8db6-4037-b8f4-00d77de156a1"],

Cell[BoxData["\<\"Age Estimation VGG-16 Trained on IMDB-WIKI and Looking at \
People Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.76862436495827*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"dd117f29-be7c-4581-b111-32605ed451f8"],

Cell[BoxData["\<\"Age Estimation VGG-16 Trained on IMDB-WIKI Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.76862436495827*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"8ef8afdf-be76-4ca7-a4e1-2d4a5b54bea8"],

Cell[BoxData["\<\"BERT Trained on BookCorpus and English Wikipedia \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243659254723`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"d1c9875c-64b7-4ae1-b181-d94a63c51991"],

Cell[BoxData["\<\"BPEmb Subword Embeddings Trained on Wikipedia Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624367064274*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"c5f0c4b9-34c6-4bbc-a508-7274c26d6896"],

Cell[BoxData["\<\"CapsNet Trained on MNIST Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624367402875*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"1f65e0dc-2ae1-4a26-8f39-430651cfdb52"],

Cell[BoxData["\<\"Clinical Concept Embeddings Trained on Health Insurance \
Claims, Clinical Narratives from Stanford and PubMed Journal Articles\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243682608767`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"b6bd53be-6ecf-44c1-b88f-e62cca51db18"],

Cell[BoxData["\<\"Colorful Image Colorization Trained on ImageNet Competition \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243683232765`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"4189f9dd-c2f1-48f1-b969-11b7fe8a77c0"],

Cell[BoxData["\<\"ColorNet Image Colorization Trained on ImageNet Competition \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243683388767`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"e320eaea-35a9-49f9-b171-5ba12d73419e"],

Cell[BoxData["\<\"ColorNet Image Colorization Trained on Places Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243683388767`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"4babb57c-7de1-450c-a643-4012eba2ff12"],

Cell[BoxData["\<\"ConceptNet Numberbatch Word Vectors V17.06\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243683388767`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"54d312ec-9411-476a-b7ea-9b2d946b997e"],

Cell[BoxData["\<\"ConceptNet Numberbatch Word Vectors V17.06 (Raw \
Model)\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243683388767`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"914c5020-4819-4409-bd65-f06820a74153"],

Cell[BoxData["\<\"CREPE Pitch Detection Net Trained on Monophonic Signal Data\
\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243683388767`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"441b3429-dca1-4818-be07-b3d867de4531"],

Cell[BoxData["\<\"CycleGAN Apple-to-Orange Translation Trained on ImageNet \
Competition Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243683388767`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"e2f32301-96d0-486d-9622-192f81e4b221"],

Cell[BoxData["\<\"CycleGAN Horse-to-Zebra Translation Trained on ImageNet \
Competition Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243683388767`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"6457188e-4e81-4ec8-8860-d61eea23f3b4"],

Cell[BoxData["\<\"CycleGAN Monet-to-Photo Translation\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624368385677*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"dd1dc9d7-e445-4f08-99da-ff81276e34a2"],

Cell[BoxData["\<\"CycleGAN Orange-to-Apple Translation Trained on ImageNet \
Competition Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624368385677*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"db6d8a74-ac62-4a0b-ad19-11d5fba06eb3"],

Cell[BoxData["\<\"CycleGAN Photo-to-Cezanne Translation\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624368385677*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"56f333ea-d167-4642-b4a2-782b504dd434"],

Cell[BoxData["\<\"CycleGAN Photo-to-Monet Translation\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243684012766`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"dd065527-de27-4d8b-ba07-816437966190"],

Cell[BoxData["\<\"CycleGAN Photo-to-Van Gogh Translation\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624368432477*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"66774fca-3201-428d-a281-be18dd152976"],

Cell[BoxData["\<\"CycleGAN Summer-to-Winter Translation\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624368432477*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"a0eea8d1-418e-4f3b-924c-2c470899a954"],

Cell[BoxData["\<\"CycleGAN Winter-to-Summer Translation\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624368432477*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"f4463ebb-338a-4fa1-a23b-654c41b7b2f7"],

Cell[BoxData["\<\"CycleGAN Zebra-to-Horse Translation Trained on ImageNet \
Competition Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624368432477*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"d91e4492-0ec6-4595-9aee-4ec5a03eb4f4"],

Cell[BoxData["\<\"Deep Speech 2 Trained on Baidu English Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624368432477*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"c5e2609d-bac6-4e3a-bc41-01fccfd3e55b"],

Cell[BoxData["\<\"Dilated ResNet-105 Trained on Cityscapes Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243692280784`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"4336e9db-66ad-41a6-8a6a-f1a2234739ea"],

Cell[BoxData["\<\"Dilated ResNet-22 Trained on Cityscapes Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243692280784`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"6ce0a38f-bad5-4fbd-a913-050993eba252"],

Cell[BoxData["\<\"Dilated ResNet-38 Trained on Cityscapes Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243692592783`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"81507ddb-6540-4f7d-8d07-333be3faced1"],

Cell[BoxData["\<\"ELMo Contextual Word Representations Trained on 1B Word \
Benchmark\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243692592783`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"669292c7-140f-478f-b032-a3997886db4c"],

Cell[BoxData["\<\"Enhanced Super-Resolution GAN Trained on DIV2K, Flickr2K \
and OST Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243692748785`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"e5b3b2d0-9c68-409a-93c7-dc191e8e01ed"],

Cell[BoxData["\<\"Gender Prediction VGG-16 Trained on IMDB-WIKI Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243700860796`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"ea7a5cf2-8ba3-455a-8240-749bd3e36e40"],

Cell[BoxData["\<\"GloVe 100-Dimensional Word Vectors Trained on Tweets\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.76862437014848*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"11ca1e75-7b40-406f-a59b-1af28cb2c26d"],

Cell[BoxData["\<\"GloVe 100-Dimensional Word Vectors Trained on Wikipedia and \
Gigaword 5 Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.76862437014848*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"8fd4310f-15f1-4b52-8277-6fd6b6cbb261"],

Cell[BoxData["\<\"GloVe 200-Dimensional Word Vectors Trained on Tweets\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.76862437014848*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"3976208f-3cb1-4f52-a66f-18e5899184f6"],

Cell[BoxData["\<\"GloVe 25-Dimensional Word Vectors Trained on Tweets\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.76862437014848*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"db97504e-baba-440b-afb0-90748868058e"],

Cell[BoxData["\<\"GloVe 300-Dimensional Word Vectors Trained on Common Crawl \
42B\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.76862437014848*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"38c814f7-802d-477e-8f27-5d176ff988b5"],

Cell[BoxData["\<\"GloVe 300-Dimensional Word Vectors Trained on Common Crawl \
840B\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.76862437014848*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"aa022b54-4eda-4bb6-9ad1-8822408a257b"],

Cell[BoxData["\<\"GloVe 300-Dimensional Word Vectors Trained on Wikipedia and \
Gigaword 5 Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624371053282*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"0cebd485-2811-40b3-a685-73242f8d8d9c"],

Cell[BoxData["\<\"GloVe 50-Dimensional Word Vectors Trained on Tweets\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624371880083*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"9916345a-bce9-4474-90f9-5b5ad663dce0"],

Cell[BoxData["\<\"GloVe 50-Dimensional Word Vectors Trained on Wikipedia and \
Gigaword 5 Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624371926883*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"34f47e5d-0afe-4ffb-97f9-d000b8306d67"],

Cell[BoxData["\<\"GPT Transformer Trained on BookCorpus Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624371926883*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"4d7081c5-b27c-4a6a-a96b-4491364a42b9"],

Cell[BoxData["\<\"Inception V1 Trained on Extended Salient Object Subitizing \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624371942483*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"dd5b21ab-fd61-45bd-87a9-d55dd6089e89"],

Cell[BoxData["\<\"Inception V1 Trained on ImageNet Competition Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624371942483*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"7f8e09b7-8dba-4ec3-b8c2-5d8d8f48ca89"],

Cell[BoxData["\<\"Inception V1 Trained on Places365 Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624371942483*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"51d3cf04-452f-4315-a066-e263a7d15330"],

Cell[BoxData["\<\"Inception V3 Trained on ImageNet Competition Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624371942483*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"f71d6623-91d0-4830-b69d-a255e8696cdc"],

Cell[BoxData["\<\"LeNet\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624371989283*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"34d95f23-6958-45fc-9f30-1f7a3e4f3621"],

Cell[BoxData["\<\"LeNet Trained on MNIST Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624371989283*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"061f057f-dbbb-44e2-93ea-66bf3ce32dfa"],

Cell[BoxData["\<\"Multi-scale Context Aggregation Net Trained on CamVid \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624371989283*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"d22ca5c5-4d8d-4869-8886-0e028eb0442f"],

Cell[BoxData["\<\"Multi-scale Context Aggregation Net Trained on Cityscapes \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624371989283*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"f030830c-0136-4a4d-8a8b-f16128ba7ac5"],

Cell[BoxData["\<\"Multi-scale Context Aggregation Net Trained on PASCAL \
VOC2012 Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624371989283*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"794031b3-51db-4a05-93b0-f2cd6cdd40c9"],

Cell[BoxData["\<\"OpenFace Face Recognition Net Trained on CASIA-WebFace and \
FaceScrub Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624372020483*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"7eebc836-abd6-4acd-9efc-e2f104263a9b"],

Cell[BoxData["\<\"Pix2pix Photo-to-Street-Map Translation\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624372036083*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"0e9f980c-fa0b-4eb3-98ff-95e64edf1d6f"],

Cell[BoxData["\<\"Pix2pix Street-Map-to-Photo Translation\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624372036083*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"792e01a9-74fa-4b0b-8287-9a9164b719cf"],

Cell[BoxData["\<\"ResNet-101 Trained on Augmented CASIA-WebFace Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624372036083*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"50f8a629-01cd-4c46-b619-6d7d8152e546"],

Cell[BoxData["\<\"ResNet-101 Trained on ImageNet Competition Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624372036083*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"658298ed-f13a-4a6c-ba3e-be4b565c544c"],

Cell[BoxData["\<\"ResNet-101 Trained on YFCC100m Geotagged Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243720828834`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"d6511328-2dd4-4cad-9ac0-9de7a950263b"],

Cell[BoxData["\<\"ResNet-152 Trained on ImageNet Competition Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243720828834`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"efee7bb5-e441-4dba-955c-4db9637e1592"],

Cell[BoxData["\<\"ResNet-50 Trained on ImageNet Competition Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243720828834`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"19f4b912-c52f-4025-b098-e5a7537579c4"],

Cell[BoxData["\<\"Sentiment Language Model Trained on Amazon Product Review \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243720828834`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"a7d61656-1d3f-4afb-bce7-7512457d5892"],

Cell[BoxData["\<\"Single-Image Depth Perception Net Trained on Depth in the \
Wild Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243720828834`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"c10bd8e9-00ac-4c3c-90b9-a2574d6c977c"],

Cell[BoxData["\<\"Single-Image Depth Perception Net Trained on NYU Depth V2 \
and Depth in the Wild Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243721140833`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"323c3a32-8e30-4fb0-b510-5b9ca42a094e"],

Cell[BoxData["\<\"Single-Image Depth Perception Net Trained on NYU Depth V2 \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243721296835`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"f3d382b0-f397-424d-b9d8-dedc7c6c5203"],

Cell[BoxData["\<\"Squeeze-and-Excitation Net Trained on ImageNet Competition \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243721296835`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"a26fe99c-901f-4ef1-8a1b-6dcbadb4461f"],

Cell[BoxData["\<\"SqueezeNet V1.1 Trained on ImageNet Competition Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243721296835`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"3f88694a-42ee-477d-8fc8-406201f44aee"],

Cell[BoxData["\<\"SSD-VGG-300 Trained on PASCAL VOC Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624372160884*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"52199412-8745-4ede-8dd2-4344ab73ca29"],

Cell[BoxData["\<\"SSD-VGG-512 Trained on MS-COCO Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624372160884*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"ad4b7465-3072-4a65-8ef4-76b07acee557"],

Cell[BoxData["\<\"SSD-VGG-512 Trained on PASCAL VOC2007, PASCAL VOC2012 and \
MS-COCO Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624372160884*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"4766d7fe-8589-4585-ad25-05a7dc969666"],

Cell[BoxData["\<\"U-Net Trained on Glioblastoma-Astrocytoma U373 Cells on a \
Polyacrylamide Substrate Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624372160884*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"96ee72fe-e53e-4747-a5a5-c1e6d847a799"],

Cell[BoxData["\<\"Unguided Volumetric Regression Net for 3D Face \
Reconstruction\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624372160884*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"c79c81e7-3180-41b2-ac9b-cc516b44b34f"],

Cell[BoxData["\<\"Vanilla CNN for Facial Landmark Regression\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243722076836`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"03151d9f-999a-4bcc-b6d1-065117403eca"],

Cell[BoxData["\<\"Very Deep Net for Super-Resolution\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243722076836`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"e8720c08-3b4e-4db1-8ca4-3bbc9949cdb0"],

Cell[BoxData["\<\"VGG-16 Trained on ImageNet Competition Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243722076836`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"7b699dd5-09db-4d4c-8bb1-d0dc088848a3"],

Cell[BoxData["\<\"VGG-19 Trained on ImageNet Competition Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243722076836`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"e1afaa9b-190b-4658-9327-b63d23289144"],

Cell[BoxData["\<\"VGGish Feature Extractor Trained on YouTube Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243722388835`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"5d24f403-2780-4e94-aa6f-e45d5421cca5"],

Cell[BoxData["\<\"Wide ResNet-50-2 Trained on ImageNet Competition \
Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624373050085*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"1f344381-1d42-4c4a-9674-523aa3807bf6"],

Cell[BoxData["\<\"Wolfram AudioIdentify V1 Trained on AudioSet Data\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624373096885*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"6fafdd0d-174d-43b7-905e-4ca25cfcac77"],

Cell[BoxData["\<\"Wolfram C Character-Level Language Model V1\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624373096885*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"e836119d-7c82-4a30-b715-699b3c7b6366"],

Cell[BoxData["\<\"Wolfram English Character-Level Language Model V1\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624373096885*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"2cc300f1-4abc-47d6-914f-541fab896754"],

Cell[BoxData["\<\"Wolfram ImageIdentify Net V1\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.768624373096885*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"c8676aa7-6489-4861-8efd-baf04bd452ad"],

Cell[BoxData["\<\"Wolfram JavaScript Character-Level Language Model V1\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243731436853`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"f8b17ed8-169d-4a39-a259-d52f58e7443a"],

Cell[BoxData["\<\"Wolfram LaTeX Character-Level Language Model V1\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243731436853`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"a3bdeb24-e1f2-414e-9ee1-919dc7d0ad52"],

Cell[BoxData["\<\"Wolfram Python Character-Level Language Model V1\"\>"], \
"Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243731436853`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"11a874b5-14d4-420f-9415-021442f8434f"],

Cell[BoxData["\<\"Yahoo Open NSFW Model V1\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243731436853`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"f1530d42-8d96-4135-acf9-78ef65267758"],

Cell[BoxData["\<\"YOLO V2 Trained on MS-COCO Data\"\>"], "Print",
 CellChangeTimes->{3.7508518650365458`*^9, 3.750853167934588*^9, 
  3.750853528537571*^9, 3.750853741912093*^9, 3.75085392629786*^9, 
  3.750854279789377*^9, 3.7508547479924088`*^9, 3.768622707791605*^9, 
  3.7686243731436853`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"403593d4-b99f-402e-81f6-45072b08315f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "localModels"}]], "Input",
 CellChangeTimes->{{3.7296653227341013`*^9, 3.729665324605151*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"8d11d115-3004-4184-b43f-fb7ca5bb2081"],

Cell[BoxData["82"], "Output",
 CellChangeTimes->{3.750850699144477*^9, 3.7508518694786777`*^9, 
  3.750853189055777*^9, 3.7508535409282827`*^9, 3.75085379067905*^9, 
  3.750853960631365*^9, 3.750854289293282*^9, 3.750854759588641*^9, 
  3.768622750263761*^9, 3.768624375468089*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"10f1ba0f-c70c-45f1-aa0d-a4735b759f24"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"modelNamesLocal", "=", 
   RowBox[{"Keys", "@", "localModels"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.729658530959771*^9, 3.7296585630493183`*^9}, {
  3.729658594565292*^9, 3.7296585987324953`*^9}, {3.750835933650886*^9, 
  3.750835936710208*^9}, {3.750839639091902*^9, 3.750839639613751*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"1e3af1b3-f54e-4b67-8159-bead2b84277c"],

Cell[CellGroupData[{

Cell["\:6709\:95ee\:9898\:7684\:6a21\:578bCheck", "Subsection",
 CellChangeTimes->{{3.729660339258312*^9, 
  3.7296603507391453`*^9}},ExpressionUUID->"463dfe99-08ae-4325-bd51-\
8f47319912fd"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Print", "@", "i"}], ";", 
     RowBox[{"NetModel", "[", "i", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "modelNamesLocal"}], "}"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.729658571987094*^9, 3.72965861772283*^9}, {
   3.729661118536256*^9, 3.729661127244802*^9}, 3.7297654984190297`*^9, 
   3.7508396421537437`*^9, 3.750839918917626*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"cef40bb5-65dc-4407-b3e4-bf4574dda49c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cloud\:6a21\:578b", "Section",
 CellChangeTimes->{{3.729661406706025*^9, 
  3.7296614119464207`*^9}},ExpressionUUID->"b92e28b0-0fdb-45eb-97a7-\
f55474bac15e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cloudModels", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"Select", "[", 
     RowBox[{"fullModels", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "\[Equal]", "CloudObject"}], 
       "&"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.729661502229171*^9, 3.72966153031419*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"0da16756-5146-4874-abba-abe8d48b9bca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cloudModels", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.729665343023795*^9, 3.729665344969215*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"863ff8e4-0bcf-42bf-8d66-96f72857ee67"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.7508507118305826`*^9, 3.7508532001322002`*^9, 
  3.750853541043806*^9, 3.750853790820869*^9, 3.7508539608395567`*^9, 
  3.750854295639224*^9, 3.750854759621759*^9, 3.7508548369919643`*^9, 
  3.7686228605781603`*^9, 3.768624379657897*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"49469e52-febe-4693-a825-1a1167eb02d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modelNamesCloud", "=", 
  RowBox[{"Keys", "@", "cloudModels"}]}]], "Input",
 CellChangeTimes->{{3.729662387298018*^9, 3.729662391585185*^9}, 
   3.750839630595429*^9, 3.768622872601232*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"14d47839-b895-47ce-9155-128776ffe3df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"BERT Trained on BookCorpus and English Wikipedia Data\"\>", 
   ",", "\<\"Enhanced Super-Resolution GAN Trained on DIV2K, Flickr2K and OST \
Data\"\>", ",", "\<\"Inception V3 Trained on ImageNet Competition Data\"\>", 
   ",", "\<\"LeNet\"\>", 
   ",", "\<\"VGGish Feature Extractor Trained on YouTube Data\"\>", 
   ",", "\<\"Wolfram AudioIdentify V1 Trained on AudioSet Data\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.768622872974552*^9, 3.768624379720297*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"b3d870f2-b750-427d-abaf-e27137332b43"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:6709\:95ee\:9898\:7684\:6a21\:578bCheck", "Subsection",
 CellChangeTimes->{{3.729660339258312*^9, 
  3.7296603507391453`*^9}},ExpressionUUID->"53a5fd18-3e42-45ab-bf1c-\
7417623f634e"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Print", "@", "i"}], ";", 
     RowBox[{"NetModel", "[", "i", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "modelNamesCloud"}], "}"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.729658571987094*^9, 3.72965861772283*^9}, {
   3.729661118536256*^9, 3.729661127244802*^9}, 3.7297654984190297`*^9, 
   3.750839593874959*^9, 3.75083964701814*^9, 3.750839922184045*^9, 
   3.7508507371958127`*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"eadd701d-0750-4dd2-93b3-d0b385e46cf1"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"ResourceRemove", "@", 
     RowBox[{"ResourceObject", "[", "#", "]"}]}], "&"}], "/@", 
   "modelNamesCloud"}], "*)"}]], "Input",
 CellChangeTimes->{{3.75083966940473*^9, 3.750839685445093*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"3d813e6a-65de-439f-afce-bb9e90a36f36"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"assoNames2UUID", "=", 
    RowBox[{"Association", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "->", 
        RowBox[{"NetModel", "[", 
         RowBox[{"#", ",", "\"\<UUID\>\""}], "]"}]}], "&"}], "/@", "names"}], 
     "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.750841287476591*^9, 3.750841316966543*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"1aeaf4ce-8204-42c3-8aa6-323f60f09b43"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"assoNames2UUID", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "10"}], "]"}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.750841307698707*^9, 3.750841361081904*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"93dcdc6d-c64f-4fde-a78d-d619ef4db792"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:5355\:4e2a\:6a21\:578b\:5b89\:88c5", "Section",
 CellChangeTimes->{{3.750837704788781*^9, 3.7508377136981363`*^9}, 
   3.768624837898965*^9, {3.768625653685711*^9, 
   3.768625657202567*^9}},ExpressionUUID->"49a99a7b-bb04-4625-b1bb-\
66d3c3b708d1"],

Cell["\:9700\:8981\:8054\:7f51\:4e0b\:8f7d\:4e00\:4e9b\:76f8\:5173\:7684\:6587\
\:4ef6\:ff0c\:53ea\:662f\:6a21\:578b\:6587\:4ef6\:592a\:5927\:65f6\:ff0c\:4e0d\
\:7528\:8054\:7f51\:4e0b\:8f7d\:3002", "Text",
 CellChangeTimes->{{3.76862566230984*^9, 
  3.768625690375658*^9}},ExpressionUUID->"c658159c-5790-45a2-aa10-\
25bd2af33c7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"filePathProcess", "[", "filefile_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "dir", "}"}], ",", "\n", 
    RowBox[{"Which", "[", "\n", 
     RowBox[{
      RowBox[{"StringMatchQ", "[", 
       RowBox[{"$SystemID", ",", 
        RowBox[{"\"\<MacOSX\>\"", "~~", "__"}]}], "]"}], ",", "\n", 
      RowBox[{"dir", "=", 
       RowBox[{"StringTrim", "[", 
        RowBox[{"filefile", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<file://\>\"", ",", "\"\<file:\\\\\\\\\>\"", ",", 
           "\"\<file:\\\\\>\""}], "}"}]}], "]"}]}], "\n", ",", "\n", 
      RowBox[{"StringMatchQ", "[", 
       RowBox[{"$SystemID", ",", 
        RowBox[{"\"\<Windows\>\"", "~~", "__"}]}], "]"}], ",", "\n", 
      RowBox[{"dir", "=", 
       RowBox[{"StringTrim", "[", 
        RowBox[{"filefile", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<file:///\>\"", ",", "\"\<file:\\\\\\\\\>\"", ",", 
           "\"\<file:\\\\\>\""}], "}"}]}], "]"}]}], "\n", ",", "\n", 
      RowBox[{"StringMatchQ", "[", 
       RowBox[{"$SystemID", ",", 
        RowBox[{"\"\<Linux\>\"", "~~", "__"}]}], "]"}], ",", "\n", 
      RowBox[{"dir", "=", 
       RowBox[{"StringTrim", "[", 
        RowBox[{"filefile", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<file://\>\"", ",", "\"\<file:\\\\\\\\\>\"", ",", 
           "\"\<file:\\\\\>\""}], "}"}]}], "]"}]}], "\n", ",", "\n", "True", 
      ",", "\n", 
      RowBox[{
       RowBox[{"Print", "@", "filefile"}], ";", "\n", 
       RowBox[{"Print", "@", "\"\<Problem@fun@filePathProcess@\>\""}], ";", 
       RowBox[{"Abort", "[", "]"}], ";"}]}], "\n", "\n", "]"}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.768625557050281*^9, 3.768625568074444*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"3e0a0b71-f9fc-42dc-8a27-47e7ef3b9600"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "modelInstallFile", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"force", "\[Rule]", "True"}], ",", 
     RowBox[{"TimeLimit", "\[Rule]", "10"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelInstallFile", "[", 
   RowBox[{"modelName_", ",", "fileIn_String", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "dir", ",", "fileDest", ",", "dirDest", ",", "assoConfig", ",", "file", 
      ",", "fileConfig", ",", "obj"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dir", "=", 
      RowBox[{"filePathProcess", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ResourceObject", "[", "modelName", "]"}], "[", 
         "\"\<ResourceLocations\>\"", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fileDest", "=", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
        "dir", ",", "\"\<download/EvaluationNet/41f18e3b11f833a6/data\>\"", 
         ",", "\"\<data.WLNet\>\""}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dirDest", "=", 
      RowBox[{"DirectoryName", "@", "fileDest"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ResourceRemove", "[", 
      RowBox[{"obj", "=", 
       RowBox[{"ResourceObject", "@", "modelName"}]}], "]"}], ";", "\n", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Download config files for a while, TimeLimit->\>\"", ",", 
       RowBox[{"OptionValue", "[", "TimeLimit", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TimeConstrained", "[", 
      RowBox[{
       RowBox[{"ResourceData", "[", "obj", "]"}], ",", 
       RowBox[{"OptionValue", "[", "TimeLimit", "]"}]}], "]"}], ";", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"DirectoryQ", "@", "dirDest"}], ",", "Nothing", ",", 
       RowBox[{"CreateDirectory", "[", "dirDest", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "force", "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"FileExistsQ", "@", "fileDest"}], ",", 
         RowBox[{"DeleteFile", "@", "fileDest"}]}], "]"}]}], "]"}], ";", "\n", 
     RowBox[{"file", "=", "fileIn"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "file", "]"}], ",", 
       RowBox[{
        RowBox[{"CopyFile", "[", 
         RowBox[{"file", ",", "fileDest"}], "]"}], ";", "\n", 
        RowBox[{"fileConfig", "=", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{"dir", ",", "\"\<metadata\>\"", ",", "\"\<put.wl\>\""}], 
           "}"}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"FileExistsQ", "@", "fileConfig"}], ",", "\n", 
          RowBox[{
           RowBox[{"assoConfig", "=", 
            RowBox[{"Import", "[", "fileConfig", "]"}]}], ";", "\n", 
           RowBox[{
            RowBox[{
             RowBox[{
             "assoConfig", "[", "\"\<ContentElementLocations\>\"", "]"}], 
             "[", "\"\<EvaluationNet\>\"", "]"}], "=", 
            RowBox[{"LocalObject", "[", "dirDest", "]"}]}], ";", "\n", 
           RowBox[{"Export", "[", 
            RowBox[{"fileConfig", ",", "assoConfig"}], "]"}]}], "\n", ",", 
          RowBox[{
          "Print", "[", "\"\< model config file not exist\>\"", "]"}]}], 
         "]"}]}], "\n", ",", 
       RowBox[{"Print", "[", "\"\< model file not exist\>\"", "]"}]}], "\n", 
      "]"}], ";", "\n", 
     RowBox[{
     "Print", "[", 
      "\"\<Please Quit Kernel to make the model usable: Evaluate@Quit[]\>\"", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Code",
 CellChangeTimes->{{3.7686248863544517`*^9, 3.768624936640543*^9}, {
  3.7686249724556065`*^9, 3.7686250124054794`*^9}, {3.768625583493976*^9, 
  3.768625621164392*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"5936ba65-3480-41a3-a3a6-870e0e0cfc79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modelInstallFile", "[", 
  RowBox[{
  "\"\<SSD-VGG-300 Trained on PASCAL VOC Data\>\"", ",", 
   "\"\</Users/hypergroups/Nutstore/temp_1/483/48388bf5-0ca5-4019-872a-\
f524f1ecc22b/download/EvaluationNet/41f18e3b11f833a6/data/data.WLNet\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7686250220844965`*^9, 3.768625050622749*^9}, 
   3.768625493260138*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"bf85618c-ba69-4252-83cd-03d5d5ed52fc"],

Cell[BoxData["\<\"Please Quit Kernel to make the model usable: \
Evaluate@Quit[]\"\>"], "Print",
 CellChangeTimes->{3.7686255954518223`*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"3f5fb60b-1c28-4a21-894e-93b496b5a458"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetModel", "[", "\"\<SSD-VGG-300 Trained on PASCAL VOC Data\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.768625119074074*^9, 3.768625121320478*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"a58177ad-3f83-4e2d-b39f-5b09a59fee53"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-1., -0.9999999999999999}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.5999999999999999}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-0.4, 
                    2.4492935982947065`*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3., 1.8369701987210297`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-2., 1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "15", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "27", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[15], 
                    Skeleton[27]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1., -0.9999999999999999}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"ClassProb\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["ClassProb", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-1., 6.123233995736766*^-17}], 
                    Offset[{12, 12}, {-1., 6.123233995736766*^-17}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-1., 6.123233995736766*^-17}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Boxes\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Boxes", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-3., 1.8369701987210297`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"ClassProb\"", TraditionalForm], 
                    Offset[{0, -7}, {-1., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{0, -15}, {-1., 6.123233995736766*^-17}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Boxes\"", TraditionalForm], 
                    Offset[{0, -7}, {0., 0.}], {0, 1.}, Automatic, {1, 0}]}}, 
                    FontColor -> GrayLevel[0.5], StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"3\"", "\"300\"", 
                    "\"300\""}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8732\"", "\"20\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-1.4, -0.5999999999999999}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8732\"", "\"4\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"8732\"", "\"2\"", "\"2\""},
                     "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-0.4, 
                    2.4492935982947065`*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}]}, FontColor -> 
                    GrayLevel[0.7], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-1., -0.9999999999999999}, \
{-1., 6.123233995736766*^-17}, {0., 0.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 8, 24, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {221., 101.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 28.}, {28., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Outputs", "Boxes"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 300, 300}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {300, 300}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.4823529411764706, 0.4588235294117647, 
                    0.40784313725490196`}, "VarianceImage" -> None, 
                    "$Version" -> "12.0.8", "Interleaving" -> False]], 
                    Association[
                    "ClassProb" -> 
                    NeuralNetworks`TensorT[{8732, 20}, NeuralNetworks`RealT], 
                    "Boxes" -> 
                    NeuralNetworks`TensorT[{8732, 2, 2}, 
                    NeuralNetworks`RealT]], 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 300, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "ClassProb" -> 
                    NeuralNetworks`TensorT[{8732, 20}, NeuralNetworks`RealT], 
                    "Locs" -> NeuralNetworks`TensorT[{8732, 4}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{3, 300, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["ClassProb1" -> 
                    NeuralNetworks`TensorT[{4, 20, 38, 38}, 
                    NeuralNetworks`RealT], "Locs1" -> 
                    NeuralNetworks`TensorT[{4, 4, 38, 38}, 
                    NeuralNetworks`RealT], "ClassProb2" -> 
                    NeuralNetworks`TensorT[{6, 20, 19, 19}, 
                    NeuralNetworks`RealT], "Locs2" -> 
                    NeuralNetworks`TensorT[{6, 4, 19, 19}, 
                    NeuralNetworks`RealT], "ClassProb3" -> 
                    NeuralNetworks`TensorT[{6, 20, 10, 10}, 
                    NeuralNetworks`RealT], "Locs3" -> 
                    NeuralNetworks`TensorT[{6, 4, 10, 10}, 
                    NeuralNetworks`RealT], "ClassProb4" -> 
                    NeuralNetworks`TensorT[{6, 20, 5, 5}, 
                    NeuralNetworks`RealT], "Locs4" -> 
                    NeuralNetworks`TensorT[{6, 4, 5, 5}, 
                    NeuralNetworks`RealT], "ClassProb5" -> 
                    NeuralNetworks`TensorT[{4, 20, 3, 3}, 
                    NeuralNetworks`RealT], "Locs5" -> 
                    NeuralNetworks`TensorT[{4, 4, 3, 3}, 
                    NeuralNetworks`RealT], "ClassProb6" -> 
                    NeuralNetworks`TensorT[{4, 20, 1, 1}, 
                    NeuralNetworks`RealT], "Locs6" -> 
                    NeuralNetworks`TensorT[{4, 4, 1, 1}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["blockNet4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["conv1a" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 3, 
                    "ChannelGroups" -> 1, "$InputSize" -> {300, 300}, 
                    "$OutputSize" -> {300, 300}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 300, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 300, 300}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{3, 300, 
                    300}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]]], "conv1b" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "ChannelGroups" -> 1, "$InputSize" -> {300, 300}, 
                    "$OutputSize" -> {300, 300}, "$WeightsInputChannels" -> 
                    64], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 300, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 300, 300}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]]], "pool1" -> 
                    Association["Type" -> "Pooling", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 64, "$InputSize" -> {300, 300}, 
                    "$OutputSize" -> {150, 150}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{64, 300, 
                    300}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{64, 150, 
                    150}, NeuralNetworks`RealT]]], "conv2a" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "ChannelGroups" -> 1, "$InputSize" -> {150, 150}, 
                    "$OutputSize" -> {150, 150}, "$WeightsInputChannels" -> 
                    64], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 150, 150}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 150, 150}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{64, 150, 
                    150}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]]], "conv2b" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {150, 150}, 
                    "$OutputSize" -> {150, 150}, "$WeightsInputChannels" -> 
                    128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 150, 150}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 150, 150}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]]], "pool2" -> 
                    Association["Type" -> "Pooling", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 128, "$InputSize" -> {150, 150}, 
                    "$OutputSize" -> {75, 75}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 150, 
                    150}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 75, 
                    75}, NeuralNetworks`RealT]]], "conv3a" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {75, 75}, 
                    "$OutputSize" -> {75, 75}, "$WeightsInputChannels" -> 
                    128], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 75, 75}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 75, 75}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 75, 
                    75}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]]], "conv3b" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {75, 75}, 
                    "$OutputSize" -> {75, 75}, "$WeightsInputChannels" -> 
                    256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 75, 75}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 75, 75}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]]], "conv3c" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {75, 75}, 
                    "$OutputSize" -> {75, 75}, "$WeightsInputChannels" -> 
                    256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 75, 75}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 75, 75}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]]], "pool3" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Padding", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> {{0, 0}, {0, 1}, {0, 1}}, "Padding" -> 
                    0., "$Rank" -> 3, "$InputSize" -> {256, 75, 75}, 
                    "$OutputSize" -> {256, 76, 76}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 76, 
                    76}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Pooling", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 256, "$InputSize" -> {76, 76}, 
                    "$OutputSize" -> {38, 38}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 76, 
                    76}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 38, 
                    38}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 75, 
                    75}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 38, 
                    38}, NeuralNetworks`RealT]]], "conv4a" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {38, 38}, 
                    "$OutputSize" -> {38, 38}, "$WeightsInputChannels" -> 
                    256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 38, 38}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]], "conv4b" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {38, 38}, 
                    "$OutputSize" -> {38, 38}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 38, 38}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]], "conv4c" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {38, 38}, 
                    "$OutputSize" -> {38, 38}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 38, 38}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1b", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2b", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3b", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3c", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4b", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4c", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{3, 300, 300}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 38, 38}, 
                    NeuralNetworks`RealT]]], "blockNet7" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["pool4" -> 
                    Association["Type" -> "Pooling", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 512, "$InputSize" -> {38, 38}, 
                    "$OutputSize" -> {19, 19}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]], "conv5a" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {19, 19}, 
                    "$OutputSize" -> {19, 19}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 19, 19}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]], "conv5b" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {19, 19}, 
                    "$OutputSize" -> {19, 19}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 19, 19}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]], "conv5c" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {19, 19}, 
                    "$OutputSize" -> {19, 19}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 19, 19}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", 
                    "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]], "pool5" -> 
                    Association["Type" -> "Pooling", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 512, "$InputSize" -> {19, 19}, 
                    "$OutputSize" -> {19, 19}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]]], "conv6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1024, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{6, 6}, {6, 6}}, 
                    "Dilation" -> {6, 6}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {19, 19}, 
                    "$OutputSize" -> {19, 19}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 19, 19}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]]], "conv7" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1024, 1024, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1024, 
                    "ChannelGroups" -> 1, "$InputSize" -> {19, 19}, 
                    "$OutputSize" -> {19, 19}, "$WeightsInputChannels" -> 
                    1024], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 19, 19}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5b", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5c", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv7", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 19, 19}, 
                    NeuralNetworks`RealT]]], "blockNet8" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["conv8a" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 1024, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1024, 
                    "ChannelGroups" -> 1, "$InputSize" -> {19, 19}, 
                    "$OutputSize" -> {19, 19}, "$WeightsInputChannels" -> 
                    1024], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 19, 
                    19}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 19, 19}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 19, 
                    19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 19, 
                    19}, NeuralNetworks`RealT]]], "pad2" -> 
                    Association["Type" -> "Padding", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> {{0, 0}, {1, 1}, {1, 1}}, 
                    "Padding" -> 0., "$Rank" -> 3, 
                    "$InputSize" -> {256, 19, 19}, 
                    "$OutputSize" -> {256, 21, 21}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 21, 
                    21}, NeuralNetworks`RealT]]], "conv8b" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {21, 21}, 
                    "$OutputSize" -> {10, 10}, "$WeightsInputChannels" -> 
                    256], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 21, 21}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 10, 
                    10}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 10, 10}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 10, 
                    10}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 10, 
                    10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 21, 
                    21}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 10, 
                    10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "conv8a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pad2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv8a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv8b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pad2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv8b", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]]], "blockNet9" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["conv9a" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 512, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {10, 10}, 
                    "$OutputSize" -> {10, 10}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 10, 
                    10}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 10, 10}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 10, 
                    10}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 10, 
                    10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 10, 
                    10}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 10, 
                    10}, NeuralNetworks`RealT]]], "conv9b" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {10, 10}, 
                    "$OutputSize" -> {5, 5}, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 5, 
                    5}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 5, 5}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 5, 5},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 5, 
                    5}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 10, 
                    10}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 5, 
                    5}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "conv9a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv9b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv9a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv9b", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 5, 5}, 
                    NeuralNetworks`RealT]]], "multiboxLayer4" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["ClassProb4" -> 
                    NeuralNetworks`TensorT[{6, 20, 5, 5}, 
                    NeuralNetworks`RealT], "Locs4" -> 
                    NeuralNetworks`TensorT[{6, 4, 5, 5}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["multiboxClasses" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{126, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{126}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 126, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {5, 5}, 
                    "$OutputSize" -> {5, 5}, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{126, 5, 
                    5}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{6, 21, 5, 5}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{126, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 21, 5, 
                    5}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Softmax", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 21, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 21, 5, 
                    5}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[2, 21], 
                    Span[1, -1], 
                    Span[1, -1]}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{6, 21, 5, 
                    5}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 20, 5, 
                    5}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 5, 5},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 20, 5, 
                    5}, NeuralNetworks`RealT]]], "multiboxLocs" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 5, 5},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 4, 5, 
                    5}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["convloc" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> Association["OutputChannels" -> 24, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {5, 5}, "$OutputSize" -> {5, 5}, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 5, 5},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{24, 5, 5},
                     NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{24, 5, 5},
                     NeuralNetworks`RealT]]], "reshape" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{6, 4, 5, 5}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{24, 5, 5}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{6, 4, 5, 5}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Locs4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Outputs", "Output"]}], 
                    "multiboxLayer1" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["ClassProb1" -> 
                    NeuralNetworks`TensorT[{4, 20, 38, 38}, 
                    NeuralNetworks`RealT], "Locs1" -> 
                    NeuralNetworks`TensorT[{4, 4, 38, 38}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["channelNorm1" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    TwoWayRule[1, 3]]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{38, 38, 
                    512}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Max, 1.*^-20, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Log, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {38, 38, 512}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{38, 38, 
                    512}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{38, 38, 
                    512}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Softmax", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> -1],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{38, 38, 512}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{38, 38, 
                    512}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Sqrt], 
                    "$Dimensions" -> {38, 38, 512}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{38, 38, 
                    512}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{38, 38, 
                    512}, NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[
                    TwoWayRule[1, 3]]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{38, 38, 
                    512}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "ConstantTimes", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{512, 38, 38}]], 
                    "Parameters" -> Association[
                    "Dimensions" -> {512, 38, 38}, 
                    "$ArrayDimensions" -> {512, 38, 38}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]]], "multiboxClasses" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{84, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{84}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 84, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {38, 38}, 
                    "$OutputSize" -> {38, 38}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{84, 38, 
                    38}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 21, 38, 38}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{84, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 21, 38,
                     38}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Softmax", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 21, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 21, 38,
                     38}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[2, 21], 
                    Span[1, -1], 
                    Span[1, -1]}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{4, 21, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 20, 38,
                     38}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 20, 38,
                     38}, NeuralNetworks`RealT]]], "multiboxLocs" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 4, 38, 
                    38}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["convloc" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{16}]], 
                    "Parameters" -> Association["OutputChannels" -> 16, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {38, 38}, "$OutputSize" -> {38, 38}, 
                    "$WeightsInputChannels" -> 512], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 38, 
                    38}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{16, 38, 
                    38}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{16, 38, 
                    38}, NeuralNetworks`RealT]]], "reshape" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 4, 38, 38}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 4, 38, 
                    38}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "channelNorm1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "channelNorm1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "channelNorm1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Locs1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Outputs", "Output"]}], 
                    "multiboxLayer2" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["ClassProb2" -> 
                    NeuralNetworks`TensorT[{6, 20, 19, 19}, 
                    NeuralNetworks`RealT], "Locs2" -> 
                    NeuralNetworks`TensorT[{6, 4, 19, 19}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["multiboxLocs" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 4, 19, 
                    19}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["convloc" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 1024, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> Association["OutputChannels" -> 24, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {19, 19}, "$OutputSize" -> {19, 19}, 
                    "$WeightsInputChannels" -> 1024], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{24, 19, 
                    19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{24, 19, 
                    19}, NeuralNetworks`RealT]]], "reshape" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{6, 4, 19, 19}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{24, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 4, 19, 
                    19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Outputs", "Output"]}], 
                    "multiboxClasses" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{126, 1024, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{126}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 126, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1024, 
                    "ChannelGroups" -> 1, "$InputSize" -> {19, 19}, 
                    "$OutputSize" -> {19, 19}, "$WeightsInputChannels" -> 
                    1024], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{126, 19, 
                    19}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{6, 21, 19, 19}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{126, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 21, 19,
                     19}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Softmax", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 21, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 21, 19,
                     19}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[2, 21], 
                    Span[1, -1], 
                    Span[1, -1]}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{6, 21, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 20, 19,
                     19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1024, 19, 
                    19}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 20, 19,
                     19}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Locs2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Outputs", "Output"]}], 
                    "blockNet10" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["conv10a" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {5, 5}, 
                    "$OutputSize" -> {5, 5}, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 5, 
                    5}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 5, 5}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 5, 5},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 5, 
                    5}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 5, 5},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 5, 
                    5}, NeuralNetworks`RealT]]], "conv10b" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {5, 5}, 
                    "$OutputSize" -> {3, 3}, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 3, 
                    3}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 3, 3}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 3, 3},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 3, 
                    3}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 5, 5},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 3, 
                    3}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "conv10a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv10b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv10a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv10b", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 3, 3}, 
                    NeuralNetworks`RealT]]], "multiboxLayer5" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["ClassProb5" -> 
                    NeuralNetworks`TensorT[{4, 20, 3, 3}, 
                    NeuralNetworks`RealT], "Locs5" -> 
                    NeuralNetworks`TensorT[{4, 4, 3, 3}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["multiboxClasses" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{84, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{84}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 84, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {3, 3}, 
                    "$OutputSize" -> {3, 3}, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{84, 3, 3},
                     NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 21, 3, 3}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{84, 3, 3}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 21, 3, 3}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Softmax", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 21, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 21, 3, 
                    3}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[2, 21], 
                    Span[1, -1], 
                    Span[1, -1]}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{4, 21, 3, 
                    3}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 20, 3, 
                    3}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 3, 3},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 20, 3, 
                    3}, NeuralNetworks`RealT]]], "multiboxLocs" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 3, 3},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 4, 3, 
                    3}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["convloc" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{16}]], 
                    "Parameters" -> Association["OutputChannels" -> 16, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {3, 3}, "$OutputSize" -> {3, 3}, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 3, 3},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{16, 3, 3},
                     NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{16, 3, 3},
                     NeuralNetworks`RealT]]], "reshape" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 4, 3, 3}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 3, 3}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 4, 3, 3}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb5"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Locs5"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Outputs", "Output"]}], 
                    "blockNet11" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["conv11a" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 256, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {3, 3}, 
                    "$OutputSize" -> {3, 3}, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 3, 
                    3}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 3, 3}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 3, 3},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 3, 
                    3}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 3, 3},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{128, 3, 
                    3}, NeuralNetworks`RealT]]], "conv11b" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 128, 
                    "ChannelGroups" -> 1, "$InputSize" -> {3, 3}, 
                    "$OutputSize" -> {1, 1}, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 1, 
                    1}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 1, 1}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 1, 1},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 1, 
                    1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{128, 3, 3},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{256, 1, 
                    1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "conv11a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv11b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv11a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv11b", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 1, 1}, 
                    NeuralNetworks`RealT]]], "multiboxLayer6" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 1, 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["ClassProb6" -> 
                    NeuralNetworks`TensorT[{4, 20, 1, 1}, 
                    NeuralNetworks`RealT], "Locs6" -> 
                    NeuralNetworks`TensorT[{4, 4, 1, 1}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["multiboxLocs" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 1, 1},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 4, 1, 
                    1}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["convloc" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{16}]], 
                    "Parameters" -> Association["OutputChannels" -> 16, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {1, 1}, "$OutputSize" -> {1, 1}, 
                    "$WeightsInputChannels" -> 256], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 1, 1},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{16, 1, 1},
                     NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 1, 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{16, 1, 1},
                     NeuralNetworks`RealT]]], "reshape" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 4, 1, 1}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{16, 1, 1}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 4, 1, 1}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Outputs", "Output"]}], 
                    "multiboxClasses" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{84, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{84}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 84, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 256, 
                    "ChannelGroups" -> 1, "$InputSize" -> {1, 1}, 
                    "$OutputSize" -> {1, 1}, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 1, 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{84, 1, 1},
                     NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 21, 1, 1}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{84, 1, 1}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 21, 1, 1}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Softmax", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 21, 1, 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 21, 1, 
                    1}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[2, 21], 
                    Span[1, -1], 
                    Span[1, -1]}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{4, 21, 1, 
                    1}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 20, 1, 
                    1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{256, 1, 1},
                     NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{4, 20, 1, 
                    1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Locs6"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb6"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Outputs", "Output"]}], 
                    "multiboxLayer3" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["ClassProb3" -> 
                    NeuralNetworks`TensorT[{6, 20, 10, 10}, 
                    NeuralNetworks`RealT], "Locs3" -> 
                    NeuralNetworks`TensorT[{6, 4, 10, 10}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["multiboxClasses" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{126, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{126}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 126, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 512, 
                    "ChannelGroups" -> 1, "$InputSize" -> {10, 10}, 
                    "$OutputSize" -> {10, 10}, "$WeightsInputChannels" -> 
                    512], "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{126, 10, 
                    10}, NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{6, 21, 10, 10}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{126, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 21, 10,
                     10}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Softmax", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 21, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 21, 10,
                     10}, NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 
                    Span[2, 21], 
                    Span[1, -1], 
                    Span[1, -1]}]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{6, 21, 10, 
                    10}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 20, 10,
                     10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 10, 
                    10}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 20, 10,
                     10}, NeuralNetworks`RealT]]], "multiboxLocs" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 10, 
                    10}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 4, 10, 
                    10}, NeuralNetworks`RealT]], "Nodes" -> 
                    Association["convloc" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> Association["OutputChannels" -> 24, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {10, 10}, "$OutputSize" -> {10, 10}, 
                    "$WeightsInputChannels" -> 512], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{512, 10, 
                    10}, NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{24, 10, 
                    10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{24, 10, 
                    10}, NeuralNetworks`RealT]]], "reshape" -> 
                    Association["Type" -> "Reshape", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{6, 4, 10, 10}]], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{24, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{6, 4, 10, 
                    10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convloc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxClasses", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Locs3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLocs", "Outputs", "Output"]}]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "blockNet4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet9", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet9", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer4", "Outputs", "ClassProb4"], 
                    NeuralNetworks`NetPath["Outputs", "Locs4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer4", "Outputs", "Locs4"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer1", "Outputs", "ClassProb1"], 
                    NeuralNetworks`NetPath["Outputs", "Locs1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer1", "Outputs", "Locs1"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer2", "Outputs", "ClassProb2"], 
                    NeuralNetworks`NetPath["Outputs", "Locs2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer2", "Outputs", "Locs2"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb5"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer5", "Outputs", "ClassProb5"], 
                    NeuralNetworks`NetPath["Outputs", "Locs5"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer5", "Outputs", "Locs5"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "blockNet11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb6"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer6", "Outputs", "ClassProb6"], 
                    NeuralNetworks`NetPath["Outputs", "Locs6"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer6", "Outputs", "Locs6"], 
                    NeuralNetworks`NetPath["Outputs", "ClassProb3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer3", "Outputs", "ClassProb3"], 
                    NeuralNetworks`NetPath["Outputs", "Locs3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "multiboxLayer3", "Outputs", "Locs3"]}], "2" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 20, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{38, 38, 4, 20}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{38, 38, 4, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{5776, 20}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 20, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{5776, 20}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 20, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{19, 19, 6, 20}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{19, 19, 6, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2166, 20}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 20, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2166, 20}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 20, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10, 10, 6, 20}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{10, 10, 6, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{600, 20}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 20, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{600, 20}, NeuralNetworks`RealT]]],
                     "5" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 20, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{5, 5, 6, 20}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{5, 5, 6, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{150, 20}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 20, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{150, 20}, NeuralNetworks`RealT]]],
                     "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 20, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{3, 3, 4, 20}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 3, 4, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{36, 20}, NeuralNetworks`RealT]]]],
                     "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 20, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{36, 20}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 20, 1, 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 1, 4, 20}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 1, 4, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 20}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 20, 1, 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 20}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{5776, 20}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{2166, 20}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{600, 20}, NeuralNetworks`RealT], 
                    "4" -> NeuralNetworks`TensorT[{150, 20}, 
                    NeuralNetworks`RealT], "5" -> 
                    NeuralNetworks`TensorT[{36, 20}, NeuralNetworks`RealT], 
                    "6" -> NeuralNetworks`TensorT[{4, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8732, 20}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 4, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{38, 38, 4, 4}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{38, 38, 4, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{5776, 4}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 4, 38, 38}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{5776, 4}, NeuralNetworks`RealT]]],
                     "10" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 4, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{19, 19, 6, 4}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{19, 19, 6, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2166, 4}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 4, 19, 19}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2166, 4}, NeuralNetworks`RealT]]],
                     "11" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 4, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10, 10, 6, 4}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{10, 10, 6, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{600, 4}, NeuralNetworks`RealT]]]],
                     "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 4, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{600, 4}, NeuralNetworks`RealT]]], 
                    "12" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 4, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{5, 5, 6, 4}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{5, 5, 6, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{150, 4}, NeuralNetworks`RealT]]]],
                     "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{6, 4, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{150, 4}, NeuralNetworks`RealT]]], 
                    "13" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 4, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{3, 3, 4, 4}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 3, 4, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{36, 4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 4, 3, 3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{36, 4}, NeuralNetworks`RealT]]], 
                    "14" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Transpose", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    TwoWayRule[2, 4], 
                    TwoWayRule[1, 3]}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 4, 1, 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 1, 4, 4}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> 2], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 1, 4, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 4, 1, 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 4}, NeuralNetworks`RealT]]], 
                    "15" -> Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{5776, 4}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{2166, 4}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{600, 4}, NeuralNetworks`RealT], 
                    "4" -> NeuralNetworks`TensorT[{150, 4}, 
                    NeuralNetworks`RealT], "5" -> 
                    NeuralNetworks`TensorT[{36, 4}, NeuralNetworks`RealT], 
                    "6" -> NeuralNetworks`TensorT[{4, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8732, 4}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Locs2"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Locs3"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Locs4"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Locs5"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Locs6"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "ClassProb1"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "ClassProb2"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "ClassProb3"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "ClassProb4"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "ClassProb5"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "ClassProb6"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Locs1"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "5"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "6"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "ClassProb"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "15", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "15", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "5"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "6"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Locs"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"]}], "2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8732, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Boxes" -> NeuralNetworks`TensorT[{8732, 2, 2}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "cx" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 1}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732, 4}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "ConstantTimes", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{8732}]], "Parameters" -> 
                    Association["Dimensions" -> {8732}, 
                    "$ArrayDimensions" -> {8732}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "ConstantPlus", "Arrays" -> 
                    Association["Biases" -> 
                    NeuralNetworks`Private`DummyArray[{8732}]], "Parameters" -> 
                    Association["Dimensions" -> {8732}, 
                    "$ArrayDimensions" -> {8732}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 300., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8732}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732, 4}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "width" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 3}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732, 4}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.2, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8732}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "ConstantTimes", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{8732}]], "Parameters" -> 
                    Association["Dimensions" -> {8732}, 
                    "$ArrayDimensions" -> {8732}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 300., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8732}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732, 4}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "minx" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Subtract, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "cy" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 2}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732, 4}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "ConstantTimes", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{8732}]], "Parameters" -> 
                    Association["Dimensions" -> {8732}, 
                    "$ArrayDimensions" -> {8732}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "ConstantPlus", "Arrays" -> 
                    Association["Biases" -> 
                    NeuralNetworks`Private`DummyArray[{8732}]], "Parameters" -> 
                    Association["Dimensions" -> {8732}, 
                    "$ArrayDimensions" -> {8732}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 300., 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8732}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732, 4}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "height" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 4}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732, 4}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.2, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8732}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "ConstantTimes", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{8732}]], "Parameters" -> 
                    Association["Dimensions" -> {8732}, 
                    "$ArrayDimensions" -> {8732}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 300., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8732}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8732, 4}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "miny" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Subtract, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "maxx" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Plus, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "maxy" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Plus, 
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732}, 
                    NeuralNetworks`RealT]]], "cat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{34928}, 
                    NeuralNetworks`RealT]]], "reshape" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 8732}]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{34928}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 8732}, 
                    NeuralNetworks`RealT]]], "transpose" -> 
                    Association[
                    "Type" -> "Transpose", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[
                    TwoWayRule[1, 2]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{4, 8732}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8732, 4}, 
                    NeuralNetworks`RealT]]], "reshapePoint" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{8732, 2, 2}]], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{8732, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8732, 2, 2}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "cx", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "cy", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "height", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "width", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "maxx", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "cx", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "minx", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "cx", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "maxx", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "width", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "minx", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "width", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "cat", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "minx", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "maxy", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "cy", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "miny", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "cy", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "maxy", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "height", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "miny", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "height", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "cat", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "miny", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "cat", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "maxx", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "cat", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "maxy", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "cat", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "transpose", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshapePoint", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "transpose", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Boxes"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reshapePoint", "Outputs", "Output"]}]], 
                    Association[]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"ClassProb\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8732\"", 
                    "\"20\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {"", "", "", "", 
                    StyleBox[
                    TemplateBox[{"\"Boxes\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8732\"", 
                    "\"2\"", "\"2\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7686251276248894`*^9, 3.768625641337586*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"0df03298-7c2d-48ec-964f-efb55daf4d5f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 880},
WindowMargins->{{-9, Automatic}, {Automatic, -9}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 294, 4, 183, "Title",ExpressionUUID->"6c110a99-20a1-4969-b9e2-cbffc4928333"],
Cell[CellGroupData[{
Cell[899, 30, 207, 4, 128, "Chapter",ExpressionUUID->"18d89f6a-4102-473a-a76b-e95e6d172eba"],
Cell[1109, 36, 244, 5, 98, "Code",ExpressionUUID->"d9864a60-5c03-44c1-9235-6f1d92bddb3d"],
Cell[CellGroupData[{
Cell[1378, 45, 202, 3, 98, "Code",ExpressionUUID->"4275cb64-9498-4dae-87b1-f769207e0793"],
Cell[1583, 50, 807, 11, 63, "Output",ExpressionUUID->"fb0d9ec5-aad7-4a2a-8d78-f438c1f5fc96"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2427, 66, 169, 3, 126, "Section",ExpressionUUID->"c0707f88-64f6-4740-be01-9767dec1a2f8"],
Cell[2599, 71, 444, 7, 64, "Text",ExpressionUUID->"d8e6489b-4e06-4144-98b9-5d7ed698da97"],
Cell[CellGroupData[{
Cell[3068, 82, 1117, 28, 134, "Input",ExpressionUUID->"ea332dc2-df8e-42e5-abe1-223aaa6462ac"],
Cell[CellGroupData[{
Cell[4210, 114, 426, 8, 46, "Print",ExpressionUUID->"8d512eea-5153-45b8-8ddb-3f4f7bd45b28"],
Cell[4639, 124, 424, 8, 46, "Print",ExpressionUUID->"250146d9-3e37-42b8-ab65-7f8839a185ce"],
Cell[5066, 134, 429, 8, 46, "Print",ExpressionUUID->"e11fc169-23fb-41d3-a732-704a51baa989"],
Cell[5498, 144, 409, 7, 46, "Print",ExpressionUUID->"af2c4813-4b9f-44e5-83b9-56899837725f"],
Cell[5910, 153, 413, 7, 46, "Print",ExpressionUUID->"59addc03-1f2b-4a04-a6e8-0e02c6a8e6dc"],
Cell[6326, 162, 431, 8, 46, "Print",ExpressionUUID->"1163db42-0ff4-49e1-a7ea-da731588d320"],
Cell[6760, 172, 423, 8, 46, "Print",ExpressionUUID->"043fe416-8db6-4037-b8f4-00d77de156a1"],
Cell[7186, 182, 439, 8, 46, "Print",ExpressionUUID->"dd117f29-be7c-4581-b111-32605ed451f8"],
Cell[7628, 192, 417, 8, 46, "Print",ExpressionUUID->"8ef8afdf-be76-4ca7-a4e1-2d4a5b54bea8"],
Cell[8048, 202, 426, 8, 46, "Print",ExpressionUUID->"d1c9875c-64b7-4ae1-b181-d94a63c51991"],
Cell[8477, 212, 421, 8, 46, "Print",ExpressionUUID->"c5f0c4b9-34c6-4bbc-a508-7274c26d6896"],
Cell[8901, 222, 398, 7, 46, "Print",ExpressionUUID->"1f65e0dc-2ae1-4a26-8f39-430651cfdb52"],
Cell[9302, 231, 500, 9, 83, "Print",ExpressionUUID->"b6bd53be-6ecf-44c1-b88f-e62cca51db18"],
Cell[9805, 242, 437, 8, 46, "Print",ExpressionUUID->"4189f9dd-c2f1-48f1-b969-11b7fe8a77c0"],
Cell[10245, 252, 437, 8, 46, "Print",ExpressionUUID->"e320eaea-35a9-49f9-b171-5ba12d73419e"],
Cell[10685, 262, 423, 8, 46, "Print",ExpressionUUID->"4babb57c-7de1-450c-a643-4012eba2ff12"],
Cell[11111, 272, 413, 7, 46, "Print",ExpressionUUID->"54d312ec-9411-476a-b7ea-9b2d946b997e"],
Cell[11527, 281, 427, 8, 46, "Print",ExpressionUUID->"914c5020-4819-4409-bd65-f06820a74153"],
Cell[11957, 291, 432, 8, 46, "Print",ExpressionUUID->"441b3429-dca1-4818-be07-b3d867de4531"],
Cell[12392, 301, 446, 8, 46, "Print",ExpressionUUID->"e2f32301-96d0-486d-9622-192f81e4b221"],
Cell[12841, 311, 445, 8, 46, "Print",ExpressionUUID->"6457188e-4e81-4ec8-8860-d61eea23f3b4"],
Cell[13289, 321, 404, 7, 46, "Print",ExpressionUUID->"dd1dc9d7-e445-4f08-99da-ff81276e34a2"],
Cell[13696, 330, 444, 8, 46, "Print",ExpressionUUID->"db6d8a74-ac62-4a0b-ad19-11d5fba06eb3"],
Cell[14143, 340, 406, 7, 46, "Print",ExpressionUUID->"56f333ea-d167-4642-b4a2-782b504dd434"],
Cell[14552, 349, 406, 7, 46, "Print",ExpressionUUID->"dd065527-de27-4d8b-ba07-816437966190"],
Cell[14961, 358, 407, 7, 46, "Print",ExpressionUUID->"66774fca-3201-428d-a281-be18dd152976"],
Cell[15371, 367, 406, 7, 46, "Print",ExpressionUUID->"a0eea8d1-418e-4f3b-924c-2c470899a954"],
Cell[15780, 376, 406, 7, 46, "Print",ExpressionUUID->"f4463ebb-338a-4fa1-a23b-654c41b7b2f7"],
Cell[16189, 385, 443, 8, 46, "Print",ExpressionUUID->"d91e4492-0ec6-4595-9aee-4ec5a03eb4f4"],
Cell[16635, 395, 412, 7, 46, "Print",ExpressionUUID->"c5e2609d-bac6-4e3a-bc41-01fccfd3e55b"],
Cell[17050, 404, 416, 7, 46, "Print",ExpressionUUID->"4336e9db-66ad-41a6-8a6a-f1a2234739ea"],
Cell[17469, 413, 415, 7, 46, "Print",ExpressionUUID->"6ce0a38f-bad5-4fbd-a913-050993eba252"],
Cell[17887, 422, 415, 7, 46, "Print",ExpressionUUID->"81507ddb-6540-4f7d-8d07-333be3faced1"],
Cell[18305, 431, 438, 8, 46, "Print",ExpressionUUID->"669292c7-140f-478f-b032-a3997886db4c"],
Cell[18746, 441, 442, 8, 46, "Print",ExpressionUUID->"e5b3b2d0-9c68-409a-93c7-dc191e8e01ed"],
Cell[19191, 451, 423, 8, 46, "Print",ExpressionUUID->"ea7a5cf2-8ba3-455a-8240-749bd3e36e40"],
Cell[19617, 461, 422, 8, 46, "Print",ExpressionUUID->"11ca1e75-7b40-406f-a59b-1af28cb2c26d"],
Cell[20042, 471, 445, 8, 46, "Print",ExpressionUUID->"8fd4310f-15f1-4b52-8277-6fd6b6cbb261"],
Cell[20490, 481, 422, 8, 46, "Print",ExpressionUUID->"3976208f-3cb1-4f52-a66f-18e5899184f6"],
Cell[20915, 491, 421, 8, 46, "Print",ExpressionUUID->"db97504e-baba-440b-afb0-90748868058e"],
Cell[21339, 501, 432, 8, 46, "Print",ExpressionUUID->"38c814f7-802d-477e-8f27-5d176ff988b5"],
Cell[21774, 511, 433, 8, 46, "Print",ExpressionUUID->"aa022b54-4eda-4bb6-9ad1-8822408a257b"],
Cell[22210, 521, 446, 8, 46, "Print",ExpressionUUID->"0cebd485-2811-40b3-a685-73242f8d8d9c"],
Cell[22659, 531, 422, 8, 46, "Print",ExpressionUUID->"9916345a-bce9-4474-90f9-5b5ad663dce0"],
Cell[23084, 541, 445, 8, 46, "Print",ExpressionUUID->"34f47e5d-0afe-4ffb-97f9-d000b8306d67"],
Cell[23532, 551, 411, 7, 46, "Print",ExpressionUUID->"4d7081c5-b27c-4a6a-a96b-4491364a42b9"],
Cell[23946, 560, 434, 8, 46, "Print",ExpressionUUID->"dd5b21ab-fd61-45bd-87a9-d55dd6089e89"],
Cell[24383, 570, 420, 8, 46, "Print",ExpressionUUID->"7f8e09b7-8dba-4ec3-b8c2-5d8d8f48ca89"],
Cell[24806, 580, 407, 7, 46, "Print",ExpressionUUID->"51d3cf04-452f-4315-a066-e263a7d15330"],
Cell[25216, 589, 420, 8, 46, "Print",ExpressionUUID->"f71d6623-91d0-4830-b69d-a255e8696cdc"],
Cell[25639, 599, 374, 7, 46, "Print",ExpressionUUID->"34d95f23-6958-45fc-9f30-1f7a3e4f3621"],
Cell[26016, 608, 396, 7, 46, "Print",ExpressionUUID->"061f057f-dbbb-44e2-93ea-66bf3ce32dfa"],
Cell[26415, 617, 429, 8, 46, "Print",ExpressionUUID->"d22ca5c5-4d8d-4869-8886-0e028eb0442f"],
Cell[26847, 627, 433, 8, 46, "Print",ExpressionUUID->"f030830c-0136-4a4d-8a8b-f16128ba7ac5"],
Cell[27283, 637, 437, 8, 46, "Print",ExpressionUUID->"794031b3-51db-4a05-93b0-f2cd6cdd40c9"],
Cell[27723, 647, 444, 8, 46, "Print",ExpressionUUID->"7eebc836-abd6-4acd-9efc-e2f104263a9b"],
Cell[28170, 657, 408, 7, 46, "Print",ExpressionUUID->"0e9f980c-fa0b-4eb3-98ff-95e64edf1d6f"],
Cell[28581, 666, 408, 7, 46, "Print",ExpressionUUID->"792e01a9-74fa-4b0b-8287-9a9164b719cf"],
Cell[28992, 675, 421, 8, 46, "Print",ExpressionUUID->"50f8a629-01cd-4c46-b619-6d7d8152e546"],
Cell[29416, 685, 418, 8, 46, "Print",ExpressionUUID->"658298ed-f13a-4a6c-ba3e-be4b565c544c"],
Cell[29837, 695, 416, 7, 46, "Print",ExpressionUUID->"d6511328-2dd4-4cad-9ac0-9de7a950263b"],
Cell[30256, 704, 420, 8, 46, "Print",ExpressionUUID->"efee7bb5-e441-4dba-955c-4db9637e1592"],
Cell[30679, 714, 419, 8, 46, "Print",ExpressionUUID->"19f4b912-c52f-4025-b098-e5a7537579c4"],
Cell[31101, 724, 435, 8, 46, "Print",ExpressionUUID->"a7d61656-1d3f-4afb-bce7-7512457d5892"],
Cell[31539, 734, 440, 8, 46, "Print",ExpressionUUID->"c10bd8e9-00ac-4c3c-90b9-a2574d6c977c"],
Cell[31982, 744, 457, 8, 46, "Print",ExpressionUUID->"323c3a32-8e30-4fb0-b510-5b9ca42a094e"],
Cell[32442, 754, 435, 8, 46, "Print",ExpressionUUID->"f3d382b0-f397-424d-b9d8-dedc7c6c5203"],
Cell[32880, 764, 436, 8, 46, "Print",ExpressionUUID->"a26fe99c-901f-4ef1-8a1b-6dcbadb4461f"],
Cell[33319, 774, 425, 8, 46, "Print",ExpressionUUID->"3f88694a-42ee-477d-8fc8-406201f44aee"],
Cell[33747, 784, 407, 7, 46, "Print",ExpressionUUID->"52199412-8745-4ede-8dd2-4344ab73ca29"],
Cell[34157, 793, 404, 7, 46, "Print",ExpressionUUID->"ad4b7465-3072-4a65-8ef4-76b07acee557"],
Cell[34564, 802, 441, 8, 46, "Print",ExpressionUUID->"4766d7fe-8589-4585-ad25-05a7dc969666"],
Cell[35008, 812, 458, 8, 46, "Print",ExpressionUUID->"96ee72fe-e53e-4747-a5a5-c1e6d847a799"],
Cell[35469, 822, 432, 8, 46, "Print",ExpressionUUID->"c79c81e7-3180-41b2-ac9b-cc516b44b34f"],
Cell[35904, 832, 413, 7, 46, "Print",ExpressionUUID->"03151d9f-999a-4bcc-b6d1-065117403eca"],
Cell[36320, 841, 405, 7, 46, "Print",ExpressionUUID->"e8720c08-3b4e-4db1-8ca4-3bbc9949cdb0"],
Cell[36728, 850, 414, 7, 46, "Print",ExpressionUUID->"7b699dd5-09db-4d4c-8bb1-d0dc088848a3"],
Cell[37145, 859, 414, 7, 46, "Print",ExpressionUUID->"e1afaa9b-190b-4658-9327-b63d23289144"],
Cell[37562, 868, 421, 8, 46, "Print",ExpressionUUID->"5d24f403-2780-4e94-aa6f-e45d5421cca5"],
Cell[37986, 878, 424, 8, 46, "Print",ExpressionUUID->"1f344381-1d42-4c4a-9674-523aa3807bf6"],
Cell[38413, 888, 420, 8, 46, "Print",ExpressionUUID->"6fafdd0d-174d-43b7-905e-4ca25cfcac77"],
Cell[38836, 898, 412, 7, 46, "Print",ExpressionUUID->"e836119d-7c82-4a30-b715-699b3c7b6366"],
Cell[39251, 907, 420, 8, 46, "Print",ExpressionUUID->"2cc300f1-4abc-47d6-914f-541fab896754"],
Cell[39674, 917, 397, 7, 46, "Print",ExpressionUUID->"c8676aa7-6489-4861-8efd-baf04bd452ad"],
Cell[40074, 926, 425, 8, 46, "Print",ExpressionUUID->"f8b17ed8-169d-4a39-a259-d52f58e7443a"],
Cell[40502, 936, 420, 8, 46, "Print",ExpressionUUID->"a3bdeb24-e1f2-414e-9ee1-919dc7d0ad52"],
Cell[40925, 946, 421, 8, 46, "Print",ExpressionUUID->"11a874b5-14d4-420f-9415-021442f8434f"],
Cell[41349, 956, 395, 7, 46, "Print",ExpressionUUID->"f1530d42-8d96-4135-acf9-78ef65267758"],
Cell[41747, 965, 402, 7, 46, "Print",ExpressionUUID->"403593d4-b99f-402e-81f6-45072b08315f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42198, 978, 211, 3, 55, "Input",ExpressionUUID->"8d11d115-3004-4184-b43f-fb7ca5bb2081"],
Cell[42412, 983, 360, 5, 63, "Output",ExpressionUUID->"10f1ba0f-c70c-45f1-aa0d-a4735b759f24"]
}, Open  ]],
Cell[42787, 991, 411, 7, 55, "Input",ExpressionUUID->"1e3af1b3-f54e-4b67-8159-bead2b84277c"],
Cell[CellGroupData[{
Cell[43223, 1002, 191, 3, 101, "Subsection",ExpressionUUID->"463dfe99-08ae-4325-bd51-8f47319912fd"],
Cell[43417, 1007, 530, 12, 55, "Input",ExpressionUUID->"cef40bb5-65dc-4407-b3e4-bf4574dda49c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43996, 1025, 164, 3, 126, "Section",ExpressionUUID->"b92e28b0-0fdb-45eb-97a7-f55474bac15e"],
Cell[44163, 1030, 498, 13, 55, "Input",ExpressionUUID->"0da16756-5146-4874-abba-abe8d48b9bca"],
Cell[CellGroupData[{
Cell[44686, 1047, 210, 3, 55, "Input",ExpressionUUID->"863ff8e4-0bcf-42bf-8d66-96f72857ee67"],
Cell[44899, 1052, 366, 5, 63, "Output",ExpressionUUID->"49469e52-febe-4693-a825-1a1167eb02d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45302, 1062, 292, 5, 55, "Input",ExpressionUUID->"14d47839-b895-47ce-9155-128776ffe3df"],
Cell[45597, 1069, 592, 10, 181, "Output",ExpressionUUID->"b3d870f2-b750-427d-abaf-e27137332b43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46226, 1084, 191, 3, 101, "Subsection",ExpressionUUID->"53a5fd18-3e42-45ab-bf1c-7417623f634e"],
Cell[46420, 1089, 577, 13, 55, "Input",ExpressionUUID->"eadd701d-0750-4dd2-93b3-d0b385e46cf1"],
Cell[47000, 1104, 338, 8, 55, "Input",ExpressionUUID->"3d813e6a-65de-439f-afce-bb9e90a36f36"],
Cell[47341, 1114, 461, 12, 55, "Input",ExpressionUUID->"1aeaf4ce-8204-42c3-8aa6-323f60f09b43"],
Cell[47805, 1128, 288, 6, 55, "Input",ExpressionUUID->"93dcdc6d-c64f-4fde-a78d-d619ef4db792"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48142, 1140, 256, 4, 126, "Section",ExpressionUUID->"49a99a7b-bb04-4625-b1bb-66d3c3b708d1"],
Cell[48401, 1146, 331, 5, 64, "Text",ExpressionUUID->"c658159c-5790-45a2-aa10-25bd2af33c7c"],
Cell[48735, 1153, 1859, 45, 675, "Code",ExpressionUUID->"3e0a0b71-f9fc-42dc-8a27-47e7ef3b9600"],
Cell[50597, 1200, 4143, 100, 855, "Code",ExpressionUUID->"5936ba65-3480-41a3-a3a6-870e0e0cfc79"],
Cell[CellGroupData[{
Cell[54765, 1304, 460, 9, 134, "Input",ExpressionUUID->"bf85618c-ba69-4252-83cd-03d5d5ed52fc"],
Cell[55228, 1315, 245, 5, 46, "Print",ExpressionUUID->"3f5fb60b-1c28-4a21-894e-93b496b5a458"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55510, 1325, 253, 4, 55, "Input",ExpressionUUID->"a58177ad-3f83-4e2d-b39f-5b09a59fee53"],
Cell[55766, 1331, 235426, 3978, 136, "Output",ExpressionUUID->"0df03298-7c2d-48ec-964f-efb55daf4d5f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

